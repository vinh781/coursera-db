{
  "quizSrc": [
    {
      "term": "Which of the following software development models can best respond to requirements changes?A. The V-modelB. The Waterfall modelC. Agile models",
      "definition": "C. Agile models"
    },
    {
      "term": "In which of the following software development models are the software development activities performed sequentially rather than in iterations?A. Agile modelsB. The Waterfall model",
      "definition": "B. The Waterfall model"
    },
    {
      "term": "Which of the following are limitations of the waterfall model? Select three.A. Integration issues may remain undetected until the last phase.B. Misinterpretations of requirements or design can remain undetected until the later development phases.C. It is not suitable for big projects.D. It is difficult to respond to requirements changes.",
      "definition": "A. Integration issues may remain undetected until the last phase.  B. Misinterpretations of requirements or design can remain undetected until the later development phases.  D. It is difficult to respond to requirements changes."
    },
    {
      "term": "Which is the right description about the requirement specification process?A. Requirement specification is a process to design the solution to the problem.B. Requirement specification is a process that identifies and specifies the problem and possible solutions to the problem.C. Requirement specification is a process to identify and specify the problem to solve.D. Requirement specification is a process of solving the requirements.",
      "definition": "C. Requirement specification is a process to identify and specify the problem to solve."
    },
    {
      "term": "Specifying requirements is difficult because (select three):A. Software is intangible, which makes it difficult to comprehend and communicate.B. Terminology can be interpreted in multiple ways depending on the person or the context in which it was used.C. The client or end users might not be clear about what they want.D. There is no guideline for writing a software requirement specification document.",
      "definition": "A. Software is intangible, which makes it difficult to comprehend and communicate.  B. Terminology can be interpreted in multiple ways depending on the person or the context in which it was used.  C. The client or end users might not be clear about what they want."
    },
    {
      "term": "Why is requirement specification important? Select two.A. Spending time upfront in requirement specification can save time in the later phases of the software development lifecycle.B. Changing the requirement is not possible once the system is fully developed.C. Repairing a bug in the requirements can cost thousands of times less than in the later phases of the software development lifecycle.",
      "definition": "A. Spending time upfront in requirement specification can save time in the later phases of the software development lifecycle.  C. Repairing a bug in the requirements can cost thousands of times less than in the later phases of the software development lifecycle."
    },
    {
      "term": "Which of the following are true about requirements and specifications? (Choose all that apply)A. Specifications shall meet the requirements.B. Requirements shall be written in the user's language; system specifications shall be written in the system language.C. Requirements call for specification-level refinement.D. Requirements are for users; specifications are for developers.",
      "definition": "A. Specifications shall meet the requirements.  B. Requirements shall be written in the user's language; system specifications shall be written in the system language.  D. Requirements are for users; specifications are for developers."
    },
    {
      "term": "The following are the requirements and specifications of an online banking service. Which of the following can be categorized as (user) requirements? Select two.A. The user shall be able to check the current balance of the checking accounts that he/she own.B. Activate a login session when a user logs in, and maintain the session for 60 minutes unless the user who logged in had remained inactive for more than 120 seconds.C. A user shall be able to use the online banking system securely.D. At the time a query is made to check the current balance of a checking account, the owner of the checking account shall be logged in.",
      "definition": "A. The user shall be able to check the current balance of the checking accounts that he/she own.  C. A user shall be able to use the online banking system securely."
    },
    {
      "term": "The following are requirements and specifications of an online banking service. Which of the following can be categorized as system specifications? Select two.A. A user shall be able to use the online banking system securely.B. Activate a login session when a user logs in, and maintain the session for 60 minutes unless the user who logged in has been inactive for more than 120 seconds.C. At the time a query is made to check the current balance of a checking account, the owner of the checking account shall be logged in.D. The user shall be able to check the current balance of the checking accounts that he/she own.",
      "definition": "B. Activate a login session when a user logs in, and maintain the session for 60 minutes unless the user who logged in has been inactive for more than 120 seconds.  C. At the time a query is made to check the current balance of a checking account, the owner of the checking account shall be logged in."
    },
    {
      "term": "A constraint to only use Microsoft Project during the system development is a non-functional requirement.A. True.B. False.",
      "definition": "A. True."
    },
    {
      "term": "Which of the following are non-functional requirements:A. Some product requirements, like using a specific encryption protocol, are non-functional requirements.B. Organization requirements imposed by the company, like a specific coding style, are non-functional requirements.C. External requirements imposed by external organization, like using a specific development style, are non-functional requirements.D. All of the above.",
      "definition": "D. All of the above."
    },
    {
      "term": "WRSPM stands for:A. Wide, Requirement, Software, Planning and Model.B. World, Requirement, Specification, Program and Machine.C. None of the above.",
      "definition": "B. World, Requirement, Specification, Program and Machine."
    },
    {
      "term": "Looking at the difference between user requirements and system specifications in the ATM example, we know that swiping the card and prompting for a PIN are requirements, while reading the card details and a 4-digit PIN are specifications.A. True.B. False.",
      "definition": "A. True."
    },
    {
      "term": "The purpose of the WRSPM model is to ensure that:A. Specifications meet the requirements.B. Requirements meet specifications.C. None of the above.",
      "definition": "A. Specifications meet the requirements."
    },
    {
      "term": "A subsystem in an architecture must:A. be created separately and can operate individually.B. have business value.C. be integrated with one another or with existing subsystems.D. All of the above.",
      "definition": "D. All of the above."
    },
    {
      "term": "Partitioning of a large system into smaller subsystems helps the buy-or-build decision because we can examine each subsystem and reason about possible buy-or-build options for each.A. True.B. False.",
      "definition": "A. True."
    },
    {
      "term": "A good software architecture is important because:A. It helps organize the workforce and resources.B. It allows for parallelization in development.C. It helps build-or-buy decisions.D. It helps with funding decisions.",
      "definition": "A. It helps organize the workforce and resources.  B. It allows for parallelization in development.  C. It helps build-or-buy decisions.  D. It helps with funding decisions."
    },
    {
      "term": "A UNIX program where the output of one program is the input of another, is an example of which of the software architecture models below:A. Pipe-and-Filter Model.B. Event-based Model.C. Layered Model.D. Client-Server Model.E. Blackboard Model.",
      "definition": "A. Pipe-and-Filter Model."
    },
    {
      "term": "An online banking system is best modeled by:A. Pipe-and-Filter Model.B. Blackboard Model.C. Client-Server Model.D. Event-based Model.",
      "definition": "C. Client-Server Model."
    },
    {
      "term": "A vehicle identification and tracking system, where each moving vehicle is tracked and monitored through a shared program, is best modeled by:A. Pipe-and-Filter Model.B. Blackboard Model.C. Layer ModelD. Client-Server ModelE. Event-based Model",
      "definition": "B. Blackboard Model."
    },
    {
      "term": "The difference between subsystems and modules are:A. Subsystems can independently comprise the business logic by itself while modules can't.B. Subsystems can communicate with other subsystems while modules cannot communicate with other modules.C. All of the above.",
      "definition": "A. Subsystems can independently comprise the business logic by itself while modules can't."
    },
    {
      "term": "Software quality attributes that we care about during software architecture are:A. Performance.B. Reliability.C. Testability.D. Security.E. Usability.",
      "definition": "A. Performance.  B. Reliability.  C. Testability.  D. Security.  E. Usability."
    },
    {
      "term": "Software architecture concerns itself with both estimation and quality but not partitioning.A. True.B. False.",
      "definition": "B. False."
    },
    {
      "term": "Which of the following is considered the most difficult in the software development process?A. Accurately identifying user needsB. Developing a Java program to meet the designed solutionC. Determining the accurate market price for the finished productD. Testing the solution with users",
      "definition": "A. Accurately identifying user needs"
    },
    {
      "term": "What is a Requirements Specification?A. A process, how the requirements are written (specified)B. A product, a written specification of the requirementsC. BothD. Neither",
      "definition": "C. Both"
    },
    {
      "term": "Based on the NASA statistics on budget and schedule overrun vs. time spent on requirements process, what is the recommended amount of time to spend on the requirements stage?A. 0% of the total time spent on the projectB. 5-10% of the total time spent on the projectC. 20% of the total time spent on the projectD. The same amount as you expect to spend on testing.",
      "definition": "B. 5-10% of the total time spent on the project"
    },
    {
      "term": "Which of the following matches the terms to the correct definition?A. Requirements - user needs in user language; Specification - solution properties designed to solve problemB. Requirements - solution properties designed to solve problem; Specification - user needs in user language",
      "definition": "A. Requirements - user needs in user language; Specification - solution properties designed to solve problem"
    },
    {
      "term": "Which of these is a user requirement?A. Allow an authorized user to post a message of no more than 136 characters to the Facebook POST APIB. Use the MariaDB database for internal data persistanceC. Retry posting the message up to 3 times every 5 minutes if the post is rejected by the serverD. Allow the user to post a message to Facebook",
      "definition": "D. Allow the user to post a message to Facebook"
    },
    {
      "term": "Which of the following is NOT an example of a non-functional requirement.A. The messages between the client and server shall be in YAML 1.2 format.B. The user shall be able to select the course number.C. Communication between the client and server will be expressed in EBCDIC endoding.D. The developing team shall use the spiral model of software development lifecycle.",
      "definition": "B. The user shall be able to select the course number."
    },
    {
      "term": "What element(s) of the WRSPM model belong in the interface (i.e. the overlap between environment and system)? | R,S | R,S,P | S,P,M | S | W | S,P | P,M | M | W,R,S | W,R",
      "definition": "S,P,M"
    },
    {
      "term": "What element(s) of the WRSPM model belong in the system (including the overlap between environment and system)?A. SB. W,R,SC. S,P,MD. S,PE. WF. R,SG. W,RH. R,S,PI. P,MJ. M",
      "definition": "C. S,P,M"
    },
    {
      "term": "Which of these is proper definition of software architecture?A. integrating small systems with no individual business value into larger onesB. partitioning large systems into smaller ones that can be created separately, have individual business value, and can be easily integratedC. planning and pricing the resources involved with developing a large-scale software system, including presenting such plans and budgets to senior level executives for fundingD. all of the above",
      "definition": "B. partitioning large systems into smaller ones that can be created separately, have individual business value, and can be easily integrated"
    },
    {
      "term": "Which of the following models is best suited for a system with significant shared data that needs to be shared across a variety of components or sub-systems, somewhat like global variables, but with better data integrity?A. pipe-and-filterB. layeredC. blackboardD. event-basedE. client-server",
      "definition": "C. blackboard"
    },
    {
      "term": "Which of the following models is best suited for a system that includes several subsets of functionality that are used in more than one area of the system?A. client-serverB. event-basedC. pipe-and-filterD. blackboardE. layered",
      "definition": "C. pipe-and-filter"
    },
    {
      "term": "Which of the following models is best suited for a system that benefits from the separation of complexity and processing between work which can be done locally and that which should be completed on a shared, remote service?A. layeredB. pipe-and-filterC. client-serverD. blackboardE. event-based",
      "definition": "C. client-server"
    },
    {
      "term": "Which of the following would be considered a sub-system, rather than a module?A. A set of classes which convert various values based on environment or parameter informationB. A class which represents the paying customerC. A set of classes which generates reportsD. A class which provides a service (e.g. AccountCreationService)",
      "definition": "C. A set of classes which generates reports"
    },
    {
      "term": "What element(s) of the WRSPM model belong in the environment (including the overlap between environment and system)?A. WB. W,RC. W,R,SD. R,SE. R,S,PF. SG. S,PH. S,P,MI. P,MJ. M",
      "definition": "C. W,R,S"
    },
    {
      "term": "Software design is the process of transforming the stated problem into a ready-to-use implementation.A. FalseB. True",
      "definition": "A. False"
    },
    {
      "term": "Abstract solutions do not require extensive domain knowledge and effectively reduce the costs during the software design phase.A. FalseB. True",
      "definition": "A. False"
    },
    {
      "term": "It is often advised that abstract solutions do not provide optimization details regarding the implementation.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "When it comes to software design, it is always best to follow a solution that is widely popular in the industryA. FalseB. True",
      "definition": "A. False"
    },
    {
      "term": "While a solution coming from software design does not include implementation details, there are still common cases where pseudocode may be provided to correctly capture the sense of a complex algorithm.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Check all that apply: The four aspects of modularity are...A. Data EncapsulationB. Sort FunctionsC. ComponentsD. Information HidingE. Data HidingF. CohesionG. Coupling",
      "definition": "A. Data Encapsulation  D. Information Hiding  F. Cohesion  G. Coupling"
    },
    {
      "term": "Which of the four aspects of modularity is defined as: How well modules work together.A. Information HidingB. CouplingC. CohesionD. Data Encapsulation",
      "definition": "B. Coupling"
    },
    {
      "term": "Which of the four aspects of modularity can be described as: Abstracting away implementation details.A. Information HidingB. Data EncapsulationC. CohesionD. Coupling",
      "definition": "A. Information Hiding"
    },
    {
      "term": "Which of the four aspects of modularity can be described as: How well a module meets a single well-defined goal.A. Information HidingB. CohesionC. CouplingD. Data Encapsulation",
      "definition": "B. Cohesion"
    },
    {
      "term": "Which of the four aspects of modularity can be described as: Containment of constructs and concepts within a module.A. Information HidingB. Data EncapsulationC. CohesionD. Coupling",
      "definition": "B. Data Encapsulation"
    },
    {
      "term": "Three goals of ______ can be described as (1) Decomposability, (2) Composability, and (3) Ease of Understanding.A. ModularityB. CohesionC. Coupling",
      "definition": "A. Modularity"
    },
    {
      "term": "You have a sort function that provides no details on which sorting algorithm is used. This is an example of which aspect of modularity?A. CohesionB. Information HidingC. Data EncapsulationD. Coupling",
      "definition": "B. Information Hiding"
    },
    {
      "term": "A benefit to using ______ is that you know if your data is corrupted, then it must have been corrupted by the module.A. CohesionB. Data EncapsulationC. Information HidingD. Coupling",
      "definition": "B. Data Encapsulation"
    },
    {
      "term": "Choose the most accurate answer: Low coupling aids in...A. abstracting away complex information.B. ensuring that changes don't cross boundaries of modules.C. decomposability.D. lower corruption rate of data.",
      "definition": "B. ensuring that changes don't cross boundaries of modules."
    },
    {
      "term": "Which of the following statements about coupling are true?A. Coupling measures the strength of connections between components.B. Loose coupling makes it unlikely that changes will be propogated across components.C. Shared variables and control information leads to tight coupling.D. Loose coupling is partly achieved through message passing.E. All of the above",
      "definition": "E. All of the above"
    },
    {
      "term": "The goal in low coupling is to ensure that changes don't cross the boundaries of modules.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "The three types of tight coupling are:A. Content; Common; ExternalB. Control; Data Structure; MessageC. There is no such thing as tight couplingD. Data; Message; None",
      "definition": "A. Content; Common; External"
    },
    {
      "term": "Module A relies directly on local data of module B. This is an example of what type of coupling?A. Tight content couplingB. Tight common couplingC. Tight external coupling",
      "definition": "A. Tight content coupling"
    },
    {
      "term": "Modules A and B both rely on global data or a global variable. This is an example of what type of coupling?A. Tight content couplingB. Tight common couplingC. Tight external coupling",
      "definition": "B. Tight common coupling"
    },
    {
      "term": "Modules rely on externally imposed format (or protocol or interface). This is an example of what type of coupling?A. Tight common couplingB. Tight external couplingC. Tight content coupling",
      "definition": "B. Tight external coupling"
    },
    {
      "term": "The two types of medium coupling are:A. Content; CommonB. Data; MessageC. Control; Data StructureD. Message; None",
      "definition": "C. Control; Data Structure"
    },
    {
      "term": "Module A controls the logical flow of module B. This is an example of what type of coupling?A. Medium data structure couplingB. Medium control coupling",
      "definition": "B. Medium control coupling"
    },
    {
      "term": "Module A and B both rely on the same composite data structure. This is an example of what type of coupling?A. Medium control couplingB. Medium data structure coupling",
      "definition": "B. Medium data structure coupling"
    },
    {
      "term": "The three types of loose coupling are:A. Data; Message; NoneB. Content; Common; ExternalC. Data; Message; Data StructureD. Control; Data Structure; Loose",
      "definition": "A. Data; Message; None"
    },
    {
      "term": "Modules only share parameters. This is an example of what type of coupling?A. Loose no couplingB. Loose message couplingC. Loose data coupling",
      "definition": "C. Loose data coupling"
    },
    {
      "term": "The loosest type of coupling; components only communicate through parameters or message passing. This is an example of what type of coupling?A. Loose message couplingB. Loose data couplingC. Loose no coupling",
      "definition": "A. Loose message coupling"
    },
    {
      "term": "Choose the most accurate answer: Cohesion describes...A. decomposability.B. how changes do not cross boundaries of modules.C. how well everything within a module fits together.D. loose coupling.",
      "definition": "C. how well everything within a module fits together."
    },
    {
      "term": "Which of the following statements about cohesion is true?A. Cohesion measures how well everything within a module fits together.B. Describes the implementation of a single logical entity or function.C. Represents a desirable design attitude.D. High cohesion is the aim in software development.E. All of the above",
      "definition": "E. All of the above"
    },
    {
      "term": "The goal in real-life software development is to aim for object and functional cohesion and anything less than this should be justified.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "The four types of weak cohesion are:A. There is no such thing as loose cohesionB. Communicational, sequential, object, functionalC. Coincidental, temporal, procedural, logical associationD. Coincidental, temporal, sequential, logical association",
      "definition": "C. Coincidental, temporal, procedural, logical association"
    },
    {
      "term": "Parts of modules are together in the same file. This is an example of what type of cohesion?A. Coincidental cohesionB. Logical association cohesionC. Procedural cohesionD. Temporal cohesion",
      "definition": "A. Coincidental cohesion"
    },
    {
      "term": "Different pieces of code are activated at the same time. This is an example of what type of cohesion?A. Temporal cohesionB. Coincidental cohesionC. Procedural cohesionD. Logical association cohesion",
      "definition": "A. Temporal cohesion"
    },
    {
      "term": "One piece of code runs after the other. This is an example of what type of cohesion?A. Coincidental cohesionB. Procedural cohesionC. Logical association cohesionD. Temporal cohesion",
      "definition": "B. Procedural cohesion"
    },
    {
      "term": "Components do similar but separate things. This is an example of what type of cohesion?A. Coincidental cohesionB. Procedural cohesionC. Temporal cohesionD. Logical association cohesion",
      "definition": "D. Logical association cohesion"
    },
    {
      "term": "The two types of medium cohesion are:A. There is no such thing as medium cohesionB. Coincidental, temporalC. Communicational, sequentialD. Sequential, logical association",
      "definition": "C. Communicational, sequential"
    },
    {
      "term": "All elements of a component operate on the same input or produce the same output. This is an example of what type of cohesion?A. Communicational CohesionB. Sequential Cohesion",
      "definition": "A. Communicational Cohesion"
    },
    {
      "term": "One component's output provides the input to another component. This is an example of what type of cohesion?A. Communicational CohesionB. Sequential Cohesion",
      "definition": "B. Sequential Cohesion"
    },
    {
      "term": "The two types of strong cohesion are:A. Object, functionalB. Communicational, sequentialC. Object, strongD. Coincidental, temporal",
      "definition": "A. Object, functional"
    },
    {
      "term": "Each operation in a module is provided to allow object attributes to be modified or inspected. This is an example of what type of cohesion?A. Functional CohesionB. Object Cohesion",
      "definition": "B. Object Cohesion"
    },
    {
      "term": "Every part of a component is necessary for a single well-defined behavior. This is an example of what type of cohesion?A. Functional CohesionB. Object Cohesion",
      "definition": "A. Functional Cohesion"
    },
    {
      "term": "True or False: inheritance strengthens cohesion.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Why should you program when you are alert?A. Sleep deprivation leads to mistakes.B. Output falls drastically after working 50+ hours per week.C. All of the above",
      "definition": "C. All of the above"
    },
    {
      "term": "Which of the following are examples of 'Write code for people not computers'? Select three.A. Do not code while sleep deprived.B. In your comments, explain WHY the code does what it does.C. Choose informative variable names.D. Let your code (variable names, function names, etc.) explain HOW it does what it does.",
      "definition": "B. In your comments, explain WHY the code does what it does.  C. Choose informative variable names.  D. Let your code (variable names, function names, etc.) explain HOW it does what it does."
    },
    {
      "term": "Fill in the blank. Write ____, _____, and _____ before writing functional code.A. Comments; Benchmarks; Tips for Use.B. Comments; Tests; Exception Handling.C. System Specifications; User Guide; Exception Handling.",
      "definition": "B. Comments; Tests; Exception Handling."
    },
    {
      "term": "If you write the same code more than once...A. It's okay.B. You did something wrong.C. Put that code into a method.",
      "definition": "C. Put that code into a method."
    },
    {
      "term": "True or False: Every method can be written without side effects.A. True.B. False.",
      "definition": "B. False."
    },
    {
      "term": "Deployment occurs in the end stage of active development.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Product deployment should encapsulate three main focus areas. What are they?A. Description of the physical environmentB. Plan for recovery in case of failureC. Planned stepsD. Problem areas",
      "definition": "B. Plan for recovery in case of failure  C. Planned steps  D. Problem areas"
    },
    {
      "term": "Concerns to address in your deployment plan include:A. Physical environment requirementsB. Hardware requirementsC. DocumentationD. 3rd party software requirementsE. TrainingF. Software being deployedG. Database-related activitiesH. All of the above",
      "definition": "H. All of the above"
    },
    {
      "term": "A rollback is the reversal of actions completed during deployment with the intent to never revert a system back to its previous working state.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "What are some reasons why you would need a rollback plan? Select two.A. Installation doesn't go as expected.B. It is the end goal in product deployment.C. Fixing the problem ends up taking longer than the window allows.D. Database management in complex systems.",
      "definition": "A. Installation doesn't go as expected.  C. Fixing the problem ends up taking longer than the window allows."
    },
    {
      "term": "Deployment without a rollback plan should occasionally occur. Especially when the installation involves deleting files.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "The three cutover strategies are...A. Warm failoverB. Hot failoverC. Cold failoverD. Warm standbyE. Cold backupF. Hot standby",
      "definition": "B. Hot failover  D. Warm standby  E. Cold backup"
    },
    {
      "term": "If you need to have a cutover strategy where the replacement machine is ready for a full setup and install, then you would choose which of the following cutover strategies?A. Hot failoverB. Warm standbyC. Cold backupD. Warm failover",
      "definition": "C. Cold backup"
    },
    {
      "term": "If you need to have a cutover strategy where the replacement services are ready for the redirection of data with no installation, then you would choose which of the following cutover strategies?A. Hot backupB. Cold backupC. Hot failoverD. Warm standby",
      "definition": "C. Hot failover"
    },
    {
      "term": "If you need to have a cutover strategy where the replacement machine is running and ready for installation, then you would choose which of the following cutover strategies?A. Hot failoverB. Warm standbyC. Cold failoverD. Cold backup",
      "definition": "B. Warm standby"
    },
    {
      "term": "There is no difference between load balancing and hot failover.A. trueB. false",
      "definition": "B. false"
    },
    {
      "term": "Test data represents possible inputs that are provided to the _____ for the purposes of testing.A. systemB. oracleC. both the system and the oracle",
      "definition": "C. both the system and the oracle"
    },
    {
      "term": "The oracle uses information provided from test cases to decide the correctness of the software under testA. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Test cases are composed of _______A. test dataB. system (actual) outputsC. expected outputs",
      "definition": "A. test data  C. expected outputs"
    },
    {
      "term": "Manual oracles are sufficient and effective for the majority of real-world applicationsA. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Choose the correct True-False pair: An error is the manifestation of a failure. A failure is the manifestation of an error.A. False, TrueB. True, FalseC. False, FalseD. True, True",
      "definition": "A. False, True"
    },
    {
      "term": "It is possible for errors to remain undiscovered as long as the erroneous ________ is never usedA. componentB. test dataC. test caseD. output",
      "definition": "A. component"
    },
    {
      "term": "Software testing can be used to prove the absense of failures in a module, but not the absense of faultsA. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Where does software design fit in the traditional waterfall software development lifecycle?A. Between specification and architectureB. Between architecture and implementationC. Between implementation and deploymentD. Before requirements",
      "definition": "B. Between architecture and implementation"
    },
    {
      "term": "Which of the following is NOT an aspect of software designA. PolymorphismB. ModularityC. CohesionD. Coupling",
      "definition": "A. Polymorphism"
    },
    {
      "term": "The ability to use a built-in function of a programming language to generate a random number is an example of which of the following?A. CohesionB. Information hidingC. ModularityD. Coupling",
      "definition": "B. Information hiding"
    },
    {
      "term": "Analyzing the extent to which other modules must change when a module is modified is an example of which of the following?A. Information hidingB. CouplingC. CohesionD. Modularity",
      "definition": "B. Coupling"
    },
    {
      "term": "When all of the responsibilities of a module are easily classified as being strongly related, this is an example of high what?A. CohesionB. CouplingC. ModularityD. Information hiding",
      "definition": "A. Cohesion"
    },
    {
      "term": "Which of the following is most preferred?A. Allowing one module to affect the program flow of another via the use of a state message (message coupling)B. Having more than one module rely on the same version of the RSS standard (external coupling)C. Allowing one module to affect the program flow of another via the use of a flag (control coupling)D. Having two modules rely on the same global information structure (common coupling)",
      "definition": "A. Allowing one module to affect the program flow of another via the use of a state message (message coupling)"
    },
    {
      "term": "Which of the following is LEAST desirable?A. including functionality which relys on the same inputB. including functionality which entirely encapsulates all the necessary function for a specific taskC. including functionality which occurs around the same timeD. including functionality which modifies an object's own attributes",
      "definition": "C. including functionality which occurs around the same time"
    },
    {
      "term": "Which of the following are necessary before proper testing?A. inputs which cause issuesB. inputs, expected output, an oracle, and the actual outputC. inputs and expected outputD. inputs, expected output, and an oracle",
      "definition": "D. inputs, expected output, and an oracle"
    },
    {
      "term": "Which of the following is an mistake in code which is found in code review?A. FaultB. Effective errorC. Latent errorD. Failure",
      "definition": "B. Effective error"
    },
    {
      "term": "Which of the following is an mistake in code which has not yet been activated?A. FaultB. Effective errorC. Latent errorD. Failure",
      "definition": "C. Latent error"
    },
    {
      "term": "Which of the following is an example of validation?A. software recognizes incorrect inputsB. use of the software provides the correct results as documentedC. software is well-received by the userD. ensuring the system locks out an account after three failed log-in attempts",
      "definition": "C. software is well-received by the user"
    },
    {
      "term": "In your current project, you have access to some intern development resources, which are not currently operating at full capacity. You also know that the testing timeline will be truncated, due to delays in critical-path module development. Which strategy should you employ?A. Utilize the intern resources to design and develop drivers and stubs, while work continues on critical-path module developmentB. Make no changes to the current project testing or development allocations, utilizing intern resources to create documentation.C. Allow the testing team to work without (or with quick-to-develop) drivers and stubs, and utilize the intern resources to aid testing once all critical-path development is completeD. Allow the testing team to work without (or with quick-to-develop) drivers and stubs, while using intern resources to aid critical-path development",
      "definition": "A. Utilize the intern resources to design and develop drivers and stubs, while work continues on critical-path module development"
    },
    {
      "term": "When is testing complete?A. When you find the last bugB. When you have completed all the tests in the test planC. When you run out of timeD. When you have tested every input",
      "definition": "C. When you run out of time"
    },
    {
      "term": "Which of the following is an example of black-box testing?A. Developing additional tests when every if statement does not evaluate both true and false once given the current test suiteB. Developing additional test cases to force a division by zeroC. Developing test cases to exercise error-prone constructsD. Developing test cases based on typical user behavior",
      "definition": "D. Developing test cases based on typical user behavior"
    },
    {
      "term": "Which of the following is when the operation of a system differs from what the user expects?A. FaultB. Effective errorC. Latent errorD. Failure",
      "definition": "D. Failure"
    },
    {
      "term": "In waterfall method, you get your product in one big bang deploymentA. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Sashimi model may help decrease the time duration of the project byA. Adding more skilled resources of the projectB. Overlapping the phases",
      "definition": "B. Overlapping the phases"
    },
    {
      "term": "Which of the following are true for the V-model? Select two.A. It is a predictive model.B. Testing-related activities are started earlier in the process.C. Requirement changes are welcomed in all phases of this project.",
      "definition": "A. It is a predictive model.  B. Testing-related activities are started earlier in the process."
    },
    {
      "term": "Which of the following is a mistake made by the developer?A. Effective errorB. FaultC. Latent errorD. Failure",
      "definition": "B. Fault"
    },
    {
      "term": "In predictive models, you are not sure of user needs so requirements are expected to change during development.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "In predictive models, change during the development is expected. | True | False",
      "definition": "False"
    },
    {
      "term": "In which model might you end up building something different than what you originally planned?A. Adaptive modelsB. V-ModelC. Waterfall models",
      "definition": "A. Adaptive models"
    },
    {
      "term": "What are the BENEFITS of the Sashimi Model? Select two.A. It can support creating a learning prototype earlyB. It can help shorten development timeC. It supports early validation",
      "definition": "A. It can support creating a learning prototype early  B. It can help shorten development time"
    },
    {
      "term": "Which of the following is true for the V-model? Select two.A. The V-model is useful in cases where there is ambiguity in requirements and early validation would be useful.B. This models emphasizes risk analysis and resolutionC. In this model, you build software in incrementsD. It is a predictive model",
      "definition": "A. The V-model is useful in cases where there is ambiguity in requirements and early validation would be useful.  D. It is a predictive model"
    },
    {
      "term": "Which of the following is true for Incremental Models? Select three.A. You can overlap building of one increment with anotherB. Incremental models are always predictive modelsC. Incremental models may result in reworkD. If deploying an increment to actual users can benefit the organization, using an incremental model is a potential candidate to consider.E. You always have to use the same model for each of the increments",
      "definition": "A. You can overlap building of one increment with another  C. Incremental models may result in rework  D. If deploying an increment to actual users can benefit the organization, using an incremental model is a potential candidate to consider."
    },
    {
      "term": "Which of the following is true for the Waterfall model, V-model and Sashimi model? Select two.A. In these models, we assume that we know requirements really wellB. In these models, the cost of change depends on how late we find out about the change. If a problem requiring a change is found during the implementation phase, it will be more expensive to fix than one found during the design phase.C. In these models, the team is expected to know the solution really well.",
      "definition": "A. In these models, we assume that we know requirements really well  B. In these models, the cost of change depends on how late we find out about the change. If a problem requiring a change is found during the implementation phase, it will be more expensive to fix than one found during the design phase."
    },
    {
      "term": "Which model is the best model to use in all situations?A. Adaptive since it has most advantagesB. NoneC. Waterfall",
      "definition": "B. None"
    },
    {
      "term": "In the Unified Process, all requirements work is done upfront and no requirements work is done in the construction phase.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "What are some of the activities that happen in the elaboration phase of the Unified Process? Select two.A. Decide if you are going to build the system or buy an off-the-shelf productB. Validate system architecture by building executable architecture baselineC. Deploy an increment of the softwareD. Address known risks",
      "definition": "B. Validate system architecture by building executable architecture baseline  D. Address known risks"
    },
    {
      "term": "Which of the following activities happen in Step 2 of the Spiral Model? Select two.A. Make a decision whether to continue with the next cycleB. Resolve risksC. Identify risksD. Decide objectives and constraints",
      "definition": "B. Resolve risks  C. Identify risks"
    },
    {
      "term": "Select the four basic steps followed in each cycle of the Spiral Model.A. Identify and Resolve RisksB. DesignC. RequirementsD. Define ObjectiveE. DeploymentF. Plan the Next IterationG. Development and Tests",
      "definition": "A. Identify and Resolve Risks  D. Define Objective  F. Plan the Next Iteration  G. Development and Tests"
    },
    {
      "term": "Which of the following are true for the Unified Processes and its variants? Select two.A. UML Unified Process is the Ultimate Unified Process with a superset of all practices and processes.B. Rational Unified Process is a lighter version of the Unified Process.C. Enterprise Unified Process adds additional practices on top of the Unified Process and Rational Unified Process.D. Agile Unified Process and Open Unified Process are lighter versions of the \"Unified Process\".",
      "definition": "C. Enterprise Unified Process adds additional practices on top of the Unified Process and Rational Unified Process.  D. Agile Unified Process and Open Unified Process are lighter versions of the \"Unified Process\"."
    },
    {
      "term": "Which of the following is true for adaptive models? (Select any two)A. You may end-up building something different than what you originally thoughtB. You discourage change during the development processC. You are not sure about what exactly you want to buildD. Adaptive model is the best model in all situations",
      "definition": "A. You may end-up building something different than what you originally thought  C. You are not sure about what exactly you want to build"
    },
    {
      "term": "A team divided the application they were building into 4 parts and planning to build one part at a time. To build each part, they are planning to go through the steps of requirements, design, implementation, test, and deployment. Also, they are planning to complete each part fully with high fidelity. By fidelity we mean the completeness of the features implemented in each part. Based on this information, what type of model do you suggest they use for their software development process?A. Iterative and IncrementalB. IterativeC. Incremental",
      "definition": "C. Incremental"
    },
    {
      "term": "A team is working on a problem where the requirements are well known but they are short on time. They prefer to start the design phase when some of the requirements have been defined. Similarly, they want to start coding when the design for part of the system is ready. What model will best fit their needs?A. SashimiB. V-modelC. WaterfallD. Spiral",
      "definition": "A. Sashimi"
    },
    {
      "term": "In the incremental model variation where you do requirements and design for all of the application once and then just increment on implementation, testing, and deployment, are you making the process more suitable for a predictive or adaptive situation?A. PredictiveB. Adaptive",
      "definition": "A. Predictive"
    },
    {
      "term": "Which of following is NOT true about incremental and iterative models?A. Iterative approaches release every feature with low fidelity and then improve fidelity over time. By fidelity we mean the completeness of the feature.B. Incremental approaches release features as they are finished with high fidelity.C. An incremental model is one where you can build each part of the system individually but you release all at once.D. In a model which is both iterative and incremental, we release features when they are usable. Over time the development team improves existing features and adds new ones",
      "definition": "C. An incremental model is one where you can build each part of the system individually but you release all at once."
    },
    {
      "term": "Which of the following is NOT true for the Waterfall model, V-model and Sashimi model?A. In these models, the team is expected to know the solution really well.B. These models will be a good model to be used by a startup implement a new idea that is new to marketC. In these models, the cost of change depends on how late we find out about the change. If problem requiring a change is found during the implementation phase, it will be more expensive to fix than one found during the design phase.D. In these models, we assume that we know requirements really well.",
      "definition": "B. These models will be a good model to be used by a startup implement a new idea that is new to market"
    },
    {
      "term": "In the Unified Process, what does the milestone of \"Lifecycle Architecture\" mean?A. Agreement among stakeholders about the objectives of the project and to proceed with the project.B. Agreement among the stakeholders about the technical approach.C. Agreement among the stakeholders about the deployment of the system to actual users.",
      "definition": "B. Agreement among the stakeholders about the technical approach."
    },
    {
      "term": "Which of the following is true for the Unified Process? (select any 3)A. It is a framework and not a specific model.B. It is a predictive framework.C. It is a very simple framework to follow.D. It is an architecture-centric framework.E. The construction phase supports both iterative and incremental approaches.",
      "definition": "A. It is a framework and not a specific model.  D. It is an architecture-centric framework.  E. The construction phase supports both iterative and incremental approaches."
    },
    {
      "term": "Select situations listed below where you would NOT use the Unified Process framework.A. Medium-sized project with some risks involved.B. Very small, simple project where the problem and solution are well known.C. Situation where the organization wants to deliver part of the application early to capture the market ahead of competition.D. All requirements are not known early in the project.",
      "definition": "B. Very small, simple project where the problem and solution are well known."
    },
    {
      "term": "Which of the following is NOT true for Spiral Model?A. It minimizes waste by allowing teams to tailor the effort put into different processes based on the risk involved in each cycle.B. Spiral Model is not a model but a process model generator.C. You always have to perform all the steps mentioned in the Spiral Model diagramD. It is suitable for very large high risk projects",
      "definition": "C. You always have to perform all the steps mentioned in the Spiral Model diagram"
    },
    {
      "term": "Which of the following is NOT the benefits of the Unified Process?A. Supports to incorporate other models in the process for example you can use Agile in the construction phase.B. Supports / encourages risk identification and mitigation.C. Easy to understand and implement.D. Supports quality and reuse by putting an emphasis on architecture.E. Flexible for handling change.",
      "definition": "C. Easy to understand and implement."
    },
    {
      "term": "What are some of the challenges with Waterfall methods that prompted the software industry to come up with alternatives like Agile? Select three.A. Integration issues between different components of the software go undetected for a long time. During the testing phase, when all the components are integrated, these issues are discovered but it is very late in the process.B. It is difficult to predict user/customer needsC. Incorrect interpretations of requirements by developers go undetected for a long time. During user acceptance tests, these issues are discovered but it is very late.D. Projects were very complex and bigE. Projects cost too much. | Predicting customer needs is difficult. | Wrong implementation goes undetected for a long time.",
      "definition": "A. Integration issues between different components of the software go undetected for a long time. During the testing phase, when all the components are integrated, these issues are discovered but it is very late in the process.  B. It is difficult to predict user/customer needs  C. Incorrect interpretations of requirements by developers go undetected for a long time. During user acceptance tests, these issues are discovered but it is very late. | Predicting customer needs is difficult. | Wrong implementation goes undetected for a long time."
    },
    {
      "term": "What are the four Agile values according to the Agile Manifesto?A. Customer Collaboration over Contract NegotiationB. Planning Properly over Just ExecutingC. Working Software over Comprehensive DocumentationD. Responding to Change over Following a PlanE. People and Interaction over Processes and Tools.",
      "definition": "A. Customer Collaboration over Contract Negotiation  C. Working Software over Comprehensive Documentation  D. Responding to Change over Following a Plan  E. People and Interaction over Processes and Tools."
    },
    {
      "term": "Which of the following statements align with the value \"Working software over comprehensive documentation\" of the Agile manifesto? | Don't do documentation on an Agile project. | Create documentation when it provides value. | Must write documentation to fulfill company policy.",
      "definition": "Create documentation when it provides value."
    },
    {
      "term": "Which of the following is true about the Agile Manifesto? Select two.A. The Agile Manifesto specifies exact practices and processes that Agile teams are expected to followB. The Agile Manifesto consists of 4 values and 12 principles.C. The Agile Manifesto is a work in progress and we are continuing to learn.D. The Agile Manifesto was primarily based on theoretical knowledge.",
      "definition": "B. The Agile Manifesto consists of 4 values and 12 principles.  C. The Agile Manifesto is a work in progress and we are continuing to learn."
    },
    {
      "term": "Why is it difficult to predict user needs and requirements? Select three.A. Difficult to understand user needs.B. Sometimes the market shifts from the time when the requirements were originally defined.C. Not enough time is spent on requirements. If we spend more time early, we can define requirements very accurately.D. Translation issues. Requirements are misinterpreted.",
      "definition": "A. Difficult to understand user needs.  B. Sometimes the market shifts from the time when the requirements were originally defined.  D. Translation issues. Requirements are misinterpreted."
    },
    {
      "term": "Which of the following are TRUE about Lean Startup? Select two.A. Lean Startup concepts recommend to go through Build-Measure-Learn cycles as fast as you can.B. In Lean Startup, you try to validate/invalidate your assumptions (crucial for the success of your product) as fast as you can.C. Lean Startup concept is primarily applicable to startup companies. It is not applicable for bigger organizations.D. The concept of \"Validated Learning\" in Lean Startup means validating your learning and new ideas with your manager before you implement",
      "definition": "A. Lean Startup concepts recommend to go through Build-Measure-Learn cycles as fast as you can.  B. In Lean Startup, you try to validate/invalidate your assumptions (crucial for the success of your product) as fast as you can."
    },
    {
      "term": "Which of the following is true about Scrum? Select two.A. Burndown and Burnup chart help teams track the progress of the current sprint.B. It is encouraged to make iteration scope changes during the sprintC. In Sprint Retrospective, we talk about what we build, give a demo and get customer/client feedbackD. In daily stand-up, everybody talks about what they worked, what they are planning to work on and share any impediments they have.E. In Sprint Review, we talk about process and talk about what was working, what didn't work and how we can improve.",
      "definition": "A. Burndown and Burnup chart help teams track the progress of the current sprint.  D. In daily stand-up, everybody talks about what they worked, what they are planning to work on and share any impediments they have."
    },
    {
      "term": "Which of the following is true about product and sprint backlogs? Select two.A. A sprint backlog is created during the sprint planning meeting.B. The product backlog is a prioritized backlog with highest priority items on the top.C. Sprint and product backlogs are same thing.D. A sprint backlog has all of the items contained in the product backlog.",
      "definition": "A. A sprint backlog is created during the sprint planning meeting.  B. The product backlog is a prioritized backlog with highest priority items on the top."
    },
    {
      "term": "What are some of the challenges with the Waterfall methods that prompted the software industry to come up with alternatives like Agile? (select 2)A. Projects cost too much.B. It is difficult to predict user/customer needs.C. Projects were very complex and big.D. Incorrect interpretations of requirements by developers go undetected for a long time. During user acceptance tests, these issues are discovered but it is very late.",
      "definition": "B. It is difficult to predict user/customer needs.  D. Incorrect interpretations of requirements by developers go undetected for a long time. During user acceptance tests, these issues are discovered but it is very late."
    },
    {
      "term": "Which of the following statements aligns with the value \"Working software over comprehensive documentation\" of Agile manifesto? (select any 2) | If documentation is absolutely essential then create it. | A manager tells the team: \"Writing certain documentation is company policy so we must create them irrespective of its use. | Value delivering software over writing documentation. | An Agile coach says to the team \"Documentation is of no use.\"",
      "definition": "If documentation is absolutely essential then create it. | Value delivering software over writing documentation."
    },
    {
      "term": "Which one of the following statements/situations/conversations align with an Agile mindset? | A manager providing a status update to a customer says: \"We are done with requirements and design so we are 50% done.\" | A software vendor says to a client: \"We must define exactly what the user needs and put that in agreement.\" | Manager: \"The customer is suggesting another change in feature X which is complete as per specification. They agree that it was built as we agreed upon but it lacks some functionality and will result in user frustration. Should we implement the change or not?\" Developer: \"Yes, if it does not fulfill user needs, we should make the change.\" | A manager e-mails her team: \"Meeting face to face just for a 15 minute discussion is inefficient, let us all just dial-in from our desk.\"",
      "definition": "Manager: \"The customer is suggesting another change in feature X which is complete as per specification. They agree that it was built as we agreed upon but it lacks some functionality and will result in user frustration. Should we implement the change or not?\" Developer: \"Yes, if it does not fulfill user needs, we should make the change.\""
    },
    {
      "term": "Which of the following is TRUE about lean startup? (select all that apply)A. The concept of \"Validated Learning\" in Lean Startup means validating your learning and new ideas with your manager before you implement.B. Lean Startup concept is primarily applicable to startup companies. It is not applicable for bigger organizations.C. Lean Startup concepts recommends to go through Build-Measure-Learn cycles as fast as you can.D. In Lean Startup, you try to validate/invalidate your assumptions (crucial for the success of your product) as fast as you can.",
      "definition": "C. Lean Startup concepts recommends to go through Build-Measure-Learn cycles as fast as you can.  D. In Lean Startup, you try to validate/invalidate your assumptions (crucial for the success of your product) as fast as you can."
    },
    {
      "term": "Which of following is valid on a Kanban Board? (select any 2)A. WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done.\" Number of items in \"Doing\" column is 4, and number of items in \"Done\" column is 0B. WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done.\" Number of items in \"Doing\" column is 2, and number of items in \"Done\" column is 1C. WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done.\" Number of items in \"Doing\" column is 3, and number of items in \"Done\" column is 2D. WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done.\" Number of items in \"Doing\" column is 2, and number of items in \"Done\" column is 1. One of the items in the previous step is done and developer wants to move that item to Step XE. WIP limit for Step X is 5. Step X is divided into \"Doing\" and \"Done.\" Number of items in \"Doing\" column is 3, and number of items in \"Done\" column is 1. One of the item in previous step is done and developer wants to move that item to Step X",
      "definition": "B. WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done.\" Number of items in \"Doing\" column is 2, and number of items in \"Done\" column is 1  E. WIP limit for Step X is 5. Step X is divided into \"Doing\" and \"Done.\" Number of items in \"Doing\" column is 3, and number of items in \"Done\" column is 1. One of the item in previous step is done and developer wants to move that item to Step X"
    },
    {
      "term": "Which of the following Framework/process model supports Agile Mindset? (select all that apply)A. Lean StartupB. WaterfallC. V-ModelD. ScrumE. CrystalF. SashimiG. DSDMH. KanbanI. XP",
      "definition": "A. Lean Startup  D. Scrum  E. Crystal  G. DSDM  H. Kanban  I. XP"
    },
    {
      "term": "A software development team just started using Kanban. They had the following columns with WIP limit of 3 for each column on their Kanban board from left to right: Backlog(3), Analysis(3), Development(3), Testing(3), DeploymentThere are currently 3 items in Testing (3 items being tested)Similarly, there are 3 items in Development column (2 items are in development and 1 item is done being developed)One of the developers does not have anything to work on so the manager wants to add one more item to the development column so the developer looking for work can work on it.Which one of the following would be a valid action in this situation? (Select any 3)A. The manager should ask the testers to move one of the items of the Test column temporarily to the Deployment column so that we can move items from the Development column. Later, we can move items back from the Deployment column to the Testing column.B. Add another tester in the Testing team so this bottleneck can be resolved quickly.C. Team should get together and discuss if we should increase the WIP limit of the development column as we have more developers and it will be smoother flow if WIP limit of the Development column is increased.D. It does not make sense for the developer to wait before one of the items moved to another column. The manager should add one more item to the development column and no other change needed.E. Manager should ask the developer waiting for work to help the testers so that they can finish one of the items from their column and move it to Deployment column.",
      "definition": "B. Add another tester in the Testing team so this bottleneck can be resolved quickly.  C. Team should get together and discuss if we should increase the WIP limit of the development column as we have more developers and it will be smoother flow if WIP limit of the Development column is increased.  E. Manager should ask the developer waiting for work to help the testers so that they can finish one of the items from their column and move it to Deployment column."
    },
    {
      "term": "In Scrum, when is the sprint backlog created?A. At the beginning of the projectB. During the sprint planning meetingC. During the backlog refinement meetingD. Whenever needed",
      "definition": "B. During the sprint planning meeting"
    },
    {
      "term": "In Scrum, how is Product Backlog Arranged?A. Most important items at the top, least important items at the bottom.B. Large items at the top, small items at the bottomC. Into categories, P1, P2, P3, etc.D. Items are randomly arranged",
      "definition": "A. Most important items at the top, least important items at the bottom."
    },
    {
      "term": "Which of the following is TRUE about Scrum? (Select all that apply)A. Daily Standup in Scrum is mainly for Scrum Master to get the status of the project.B. Scrum is the best way to implement the Agile mindset. Other Agile methods are not as effective.C. Scrum has fixed time-boxed development cycles called sprints.D. Scrum is an adaptive framework/model",
      "definition": "C. Scrum has fixed time-boxed development cycles called sprints.  D. Scrum is an adaptive framework/model"
    },
    {
      "term": "What are the four values of the Agile Manifesto?A. Planning Properly Over Just ExecutingB. Working Software over comprehensive documentationC. Responding to Change Over Following a planD. People and Interaction Over Processes and toolsE. Customer Collaboration Over Contract Negotiation",
      "definition": "B. Working Software over comprehensive documentation  C. Responding to Change Over Following a plan  D. People and Interaction Over Processes and tools  E. Customer Collaboration Over Contract Negotiation"
    },
    {
      "term": "Which Agile Value does the following principle align with: \"Build projects around motivated individuals, give them the environment and support they need and trust them to get the job done.\" | Individuals and Interaction Over Process and Tools | Respond to Change Over Following a plan | Customer collaboration over contract negotiation | Working software over comprehensive documentation",
      "definition": "Individuals and Interaction Over Process and Tools"
    },
    {
      "term": "Which of the following align with the agile principle: \"Business people and developers work together daily throughout the project.\" | Since agile methodologies do not recommend writing all detailed requirements upfront, it is really important to support greater collaboration between business people and developers so that they can build a shared understanding of what needs to be built. | Business people and developers MUST meet face-to-face daily to clarify confusions, questions etc. | Business people also need to code together with developers to make faster progress.",
      "definition": "Since agile methodologies do not recommend writing all detailed requirements upfront, it is really important to support greater collaboration between business people and developers so that they can build a shared understanding of what needs to be built."
    },
    {
      "term": "What are some of the benefits organizations have seen from using agile methods? Select five.A. Project VisibilityB. Increased productivityC. Increased project governanceD. Increased Team MoraleE. Improved Business / IT AlignmentF. Better Software Quality",
      "definition": "A. Project Visibility  B. Increased productivity  D. Increased Team Morale  E. Improved Business / IT Alignment  F. Better Software Quality"
    },
    {
      "term": "The agile principle of \"Deliver working software frequently\" helps with which of the following challenges of predictive model? Select two.A. It helps validate user needs.B. It helps detect translation issues.C. It helps prevent change",
      "definition": "A. It helps validate user needs.  B. It helps detect translation issues."
    },
    {
      "term": "What new challenges does agile bring? Select two.A. Architecture/Design/Database modeling is challengingB. Agile eliminates all documentation hence makes it very difficult to use the softwareC. Very uncomfortable for leaders because of unpredictable journey",
      "definition": "A. Architecture/Design/Database modeling is challenging  C. Very uncomfortable for leaders because of unpredictable journey"
    },
    {
      "term": "What are some of the tactics / concepts you can use to implement agile mindset? Choose two.A. To keep the cost of change down, use engineering practices like automated tests, continuous integration, incremental designB. Create lot of meetings to increase collaborationC. Don't waste too much time in documenting, planning or designing. Focus your time on coding and implementation always.D. Build in small bite-sized chunks. These chunks could represent both iterative and incremental approach",
      "definition": "A. To keep the cost of change down, use engineering practices like automated tests, continuous integration, incremental design  D. Build in small bite-sized chunks. These chunks could represent both iterative and incremental approach"
    },
    {
      "term": "If a developer says \"because we are agile, we don't need to do any discussion or upfront design\", is he/she truly representing what agile means | Yes, because in agile, we start coding right away | No, agile does not mean start coding right away.",
      "definition": "No, agile does not mean start coding right away."
    },
    {
      "term": "When applying agile, we don't need to do any release planning. We only plan for a week. | True | False",
      "definition": "False"
    },
    {
      "term": "Which of the following statements align with the value \"Working software over comprehensive documentation\" of Agile manifesto? (select any 2) | If documentation is absolutely essential then create it. | Value delivering software over writing documentation. | An agile coach says to the team \"Documentation is of no use.\" | A manager tells the team: \"Writing certain documentation is company policy so we must create them irrespective of its use.\"",
      "definition": "If documentation is absolutely essential then create it. | Value delivering software over writing documentation."
    },
    {
      "term": "Which of the following are true about Agile Manifesto? (select any 2)A. The Agile Manifesto specifies exact practices and processes that agile teams are expected to followB. Agile Manifesto was primarily based on theoretical knowledgeC. The Agile Manifesto consists of 4 values and 12 principles.D. The Agile Manifesto is work in progress and we are continuing to learn.",
      "definition": "C. The Agile Manifesto consists of 4 values and 12 principles.  D. The Agile Manifesto is work in progress and we are continuing to learn."
    },
    {
      "term": "Which one of the following statements/situations/conversations align with an agile mindset? | A manager providing a status update to a customer says: \"We are done with requirements and design so we are 50% done.\" | Manager: \"The customer is suggesting another change in feature X which is complete according to the specification. They agree that it was built as we agreed upon but it lacks some functionality and will result in user frustration. Should we implement the change or not?\" Developer: \"Yes, if it does not fulfill user needs, we should make the change.\" | A software vendor says to a client: \"We must define exactly what the user needs and put that in the agreement.\" | A manager e-mails her team: \"Meeting face to face just for a 15 minute discussion is inefficient, let us all just dial-in from our desk.\"",
      "definition": "Manager: \"The customer is suggesting another change in feature X which is complete according to the specification. They agree that it was built as we agreed upon but it lacks some functionality and will result in user frustration. Should we implement the change or not?\" Developer: \"Yes, if it does not fulfill user needs, we should make the change.\""
    },
    {
      "term": "Why is it difficult to predict user needs and requirements? (select any 3)A. Sometime the market shifts from time when the requirements were originally defined.B. Difficult to understand user needs.C. There is not enough time spent on requirements. If we spend more time early, we can define requirements very accurately.D. Translation issues. Requirements are misinterpreted.",
      "definition": "A. Sometime the market shifts from time when the requirements were originally defined.  B. Difficult to understand user needs.  D. Translation issues. Requirements are misinterpreted."
    },
    {
      "term": "Which of the following statements align with following Agile Principle:\"Deliver working software frequently, from a couple of weeks to a couple of months, with a preference for the shorter timescale\"A. We MUST release software to actual users every couple weeks.B. We should frequently deliver software in some environment (not necessarily to production always) to gather user/client feedbackC. We should NOT release software to a production environment on a shorter timeframe. We should ONLY release it in lower environment (e.g., a test environment).",
      "definition": "B. We should frequently deliver software in some environment (not necessarily to production always) to gather user/client feedback"
    },
    {
      "term": "Which of the following align with this principle:\" Working software is the primary measure of progress.\"A. If a team has written the requirements and done the design for 5 out of 10 stories, then the team has made some progress (they are more than 0% done)B. On a 10 month project, the team has been working for 5 months. Thus, the project is 50% complete.C. If a team has delivered 5 features out of 10 features (or stories), team has made progress (they are more than 0% done)",
      "definition": "C. If a team has delivered 5 features out of 10 features (or stories), team has made progress (they are more than 0% done)"
    },
    {
      "term": "In which of the following situations, would you NOT recommend using an agile process?A. For a project where the customer wants to build an e-commerce website but the development team has never done something like this before. Further, the company knows that they want to build an e-commerce website but are not sure about the functionality at this time.B. For a project where requirements are well known but the technology and solution are unknown (i.e., changes expected in the solution).C. For a project where change is not expected. requirements are well known, and the solution is both well known and repeatable.D. For a project where the customer has an idea of what they want to build but is not sure of his/her exact needs.",
      "definition": "C. For a project where change is not expected. requirements are well known, and the solution is both well known and repeatable."
    },
    {
      "term": "Which of the following is true for agile projects?A. An agile methodology may help a team to go to market early by delivering with limited functionality.B. Agile methods do not require rework because the team knows exactly what they building. No refactoring of code is needed.C. Scrum is the best way to implement agile.D. If somebody says, they use an agile methodology, they must be doing either Scrum or XP.",
      "definition": "A. An agile methodology may help a team to go to market early by delivering with limited functionality."
    },
    {
      "term": "One of the core principles of agile is to \"Embrace Change\". This makes architecting and designing the system challenging since you don't know all of the requirements upfront. Thus, you have to be prepared to make architecture and design changes. To effectively embrace change, agile teams must learn how to keep the cost of change low.From the options below, select the ones that can help mitigate this challenge. (Select 3)A. Automated Regression testing provides faster feedback which helps you detect defects quickly. This in turn, gives you confidence to make changes.B. Keep the code clean and continuously improve/refactor the design as needed. Don't delay these changes for later.C. Keep design simple and just build what is required. It is easier to change a simple design than to update a complicated design.D. Try to define as many requirements as you can at the beginning of the project, and spend a good amount of time designing the system.",
      "definition": "A. Automated Regression testing provides faster feedback which helps you detect defects quickly. This in turn, gives you confidence to make changes.  B. Keep the code clean and continuously improve/refactor the design as needed. Don't delay these changes for later.  C. Keep design simple and just build what is required. It is easier to change a simple design than to update a complicated design."
    },
    {
      "term": "Which of the following is true for a typical agile project? (select 2)A. No discussion sessions happen around what we want to build. We start with coding.B. The team talks about the high-level software architecture / design as well as their approach for building software (the release plan) before directly jumping into coding.C. The team does a detailed design before starting to code.D. If required, the team may need to plan and conduct training, etc. for users before launching the system.E. Release planning is never required on an agile project. We only plan for a day or for a week at the most.",
      "definition": "B. The team talks about the high-level software architecture / design as well as their approach for building software (the release plan) before directly jumping into coding.  D. If required, the team may need to plan and conduct training, etc. for users before launching the system."
    },
    {
      "term": "What of the following are the qualities of good user story as mentioned in the INVEST model? Choose three.A. Independent: Dependencies among stories should be minimizedB. Natural: Stories should feel intuitive to the userC. Valuable: Stories should be valuable to userD. Editable: Stories should be editable after and during developmentE. Specific: Stories should define a very specific requirementF. Testable: Once the story is implemented, we should be able to test that it is done",
      "definition": "A. Independent: Dependencies among stories should be minimized  C. Valuable: Stories should be valuable to user  F. Testable: Once the story is implemented, we should be able to test that it is done"
    },
    {
      "term": "What issues do you see in following story? As a grocery buyer, I want to see different food items in different colors: red for meats, brown for grains, green for vegetables so that i can identify food items by type. | This story has no issues. It has all the info we need in a story. | The user \"grocery buyer\" is not a valid user. | This story breaks the quality of negotiable. | This story is not testable.",
      "definition": "This story breaks the quality of negotiable."
    },
    {
      "term": "What are the 3 Cs of user stories?A. ConfirmationB. ConversationC. CreativeD. CardE. Complete",
      "definition": "A. Confirmation  B. Conversation  D. Card"
    },
    {
      "term": "What are some of the key parts of a user story? Choose four.A. The story titleB. The design of the back-end functionality including table and field names.C. Acceptance testsD. Who is it for? What does the user want to do? Why does the user want to do that?E. The names of the developer who will implement the story and the tester who will validate it.F. The estimated development time",
      "definition": "A. The story title  C. Acceptance tests  D. Who is it for? What does the user want to do? Why does the user want to do that?  F. The estimated development time"
    },
    {
      "term": "Which of the following statements are true about \"Spike\" stories? Choose three.A. They can be used for knowledge acquisition.B. It is recommended that these stories have well defined acceptance criteria so that team knows what is expected at the end of exploration.C. Spike stories are timeboxed.D. Spikes are stories that allow slack time for team members to pursue their interests.",
      "definition": "A. They can be used for knowledge acquisition.  B. It is recommended that these stories have well defined acceptance criteria so that team knows what is expected at the end of exploration.  C. Spike stories are timeboxed."
    },
    {
      "term": "The goal of a story writing workshop is to:A. Write as many foundational stories as possible.B. Write as many user stories as possible in priority order.C. Write as many user stories as possible under the themes identified.D. Write as many themes as possible.",
      "definition": "C. Write as many user stories as possible under the themes identified."
    },
    {
      "term": "What are some of the valid ways to handle non-functional requirements in agile development? Select two.A. Add non-functional requirements to the definition of done for all stories.B. Create specific stories that outline the non-functional needs with clear acceptance criteria.C. Delay handling non-functional requirements until the end and then work on them after development is done.",
      "definition": "A. Add non-functional requirements to the definition of done for all stories.  B. Create specific stories that outline the non-functional needs with clear acceptance criteria."
    },
    {
      "term": "Which of the following are true about story writing workshops? Select two.A. All stories created have to be at the same level.B. A story writing workshop can take anywhere between a few hours to a few days.C. The whole team (including the product owner, the scrum master, and the development team) participates in the story writing workshop.",
      "definition": "B. A story writing workshop can take anywhere between a few hours to a few days.  C. The whole team (including the product owner, the scrum master, and the development team) participates in the story writing workshop."
    },
    {
      "term": "What are some of the ways a story map can help software development? Select all that apply.A. It organizes and prioritizes the story backlog.B. It helps plan releases and work.C. It helps discover user needs.D. It builds a shared understanding among team members.E. It helps communicate user needs with the stakeholders and get feedback.",
      "definition": "A. It organizes and prioritizes the story backlog.  B. It helps plan releases and work.  C. It helps discover user needs.  D. It builds a shared understanding among team members.  E. It helps communicate user needs with the stakeholders and get feedback."
    },
    {
      "term": "What are some of the ways a story map can help software development? (Select any four) A. It organizes and prioritizes the story backlog.B. It helps plan releases and work.C. It helps discover user needs.D. It builds a shared understanding among team members.E. It helps communicate user needs with the stakeholders and get feedback.",
      "definition": "A. It organizes and prioritizes the story backlog.  B. It helps plan releases and work.  C. It helps discover user needs.  D. It builds a shared understanding among team members.  E. It helps communicate user needs with the stakeholders and get feedback."
    },
    {
      "term": "What are some of the activities you expect to see in a story mapping exercise? Select three.A. Plan releases/journeys.B. Randomly write a story and its details.C. Find variations in the paths the user can take through the system.D. Find gaps in the story map by walking through the user experience (as expressed in the activities/tasks) aloud.",
      "definition": "A. Plan releases/journeys.  C. Find variations in the paths the user can take through the system.  D. Find gaps in the story map by walking through the user experience (as expressed in the activities/tasks) aloud."
    },
    {
      "term": "What are the characteristics of good product backlog? (Select any 4)A. Every story is assigned to developerB. EmergentC. Detailed appropriatelyD. EstimatedE. PrioritizedF. Complete with design details",
      "definition": "B. Emergent  C. Detailed appropriately  D. Estimated  E. Prioritized"
    },
    {
      "term": "Who estimates the effort to complete a product backlog item (a user story)?A. The scrum development team after clarifying the requirement.B. The scrum master with input from the scrum development team.C. The most senior people in the organization such as the engineering managers and the chief architect.D. The product owner with input from the scrum development team.",
      "definition": "A. The scrum development team after clarifying the requirement."
    },
    {
      "term": "What is true about Agile Estimation techniques? Select two.A. Estimates are shared.B. They estimate effort and not duration.C. No planning, No estimation. It is considered non productive activity.D. The senior-most person should create estimates and get feedback from team members.",
      "definition": "A. Estimates are shared.  B. They estimate effort and not duration."
    },
    {
      "term": "Which of the following estimates represents concept of relative sizing? Select three.A. Story A is bigger than Story B. Story C is smaller than Story A.B. Story A will take half the time Story B will take. Story C will take double the time Story A will take.C. Story A will take 1 day, Story B will take 5 Days and Story C will take 10 daysD. Story A is 1 apple, Story B is 5 apples, and Story C is 10 applesE. Story A will take 1.5 ideal days, Story B will take 5 ideal days and Story C will take 3.5 Ideal Days",
      "definition": "A. Story A is bigger than Story B. Story C is smaller than Story A.  B. Story A will take half the time Story B will take. Story C will take double the time Story A will take.  D. Story A is 1 apple, Story B is 5 apples, and Story C is 10 apples"
    },
    {
      "term": "What is true about the planning poker estimation technique? Select three.A. It helps uncover misunderstandings.B. It is a superfast technique to estimate lots of stories in a short amount of time.C. It supports the concept of shared estimates.D. Everyone involved in development has to participate in estimation.",
      "definition": "A. It helps uncover misunderstandings.  C. It supports the concept of shared estimates.  D. Everyone involved in development has to participate in estimation."
    },
    {
      "term": "Which of the following observations are true about Card Sorting? Select two.A. It is very useful for estimating a large number of stories.B. It is a very inaccurate method of estimation.C. This technique benefits from using relative sizing.D. Not everybody on the development team participates in this method.",
      "definition": "A. It is very useful for estimating a large number of stories.  C. This technique benefits from using relative sizing."
    },
    {
      "term": "What is true about estimation using Ideal Days? Select two.A. It is relative sizing technique.B. It is very natural for a new team member to understand.C. It is very fast to estimate.D. It has a potential issue of \"My ideal days are not your ideal days\".",
      "definition": "B. It is very natural for a new team member to understand.  D. It has a potential issue of \"My ideal days are not your ideal days\"."
    },
    {
      "term": "Calculate the velocity range a team should use to select work for next iteration based on their past velocities (see chart below). The team uses the last 5 iterations to estimate their velocity. Use format \"from-to\" to specify the answer (e.g., 0-100).Table 1: The velocity of previous iterations\"Iteration\" - \"Story points completed\"1 - 142 - 183 - 234 - 175 - 156 - 217 - 228 - 20",
      "definition": "    "
    },
    {
      "term": "A team was doing release planning and they decided that the next release will include all stories from Story 1 to Story 11 (see table 2 below).The velocity range to be used for the release planning is 15-22.The team works in a 2 week iteration.It costs about $50,000 per iteration to fund the entire team.Calculate the estimated duration for next release. Additionally, how much will this release cost?Table 2: Prioritized Product Backlog\"Story Title\" - \"Estimate (in ideal days)\"Story 1 - 5Story 2 - 5Story 3 - 8Story 4 - 3Story 5 - 5Story 6 - 5Story 7 - 3Story 8 - 5Story 9 - 8Story 10 - 8Story 11 - 3Story 12 - 3Story 13 - 3Story 14 - 5Story 15 - 8Story 16 - 3Story 17 - 5Story 18 - 5Story 19 - 8Story 20 - 8A. Duration: 6-8 weeks, Cost: 150K to 200KB. Duration: 3-4 weeks, Cost: 150K to 200KC. Duration: 10-14 weeks, Cost: 500K to 700KD. Duration: 6-8 weeks, Cost: 300K to 400K",
      "definition": "A. Duration: 6-8 weeks, Cost: 150K to 200K"
    },
    {
      "term": "Select scenarios below where the team used the correct approach to handle special cases of team velocity.A. The team is getting more defects / support work so they are not able to finish the stories selected for the current sprint. The team estimated that it takes 30% of team capacity to handle support work. The team decided to reduce velocity by 30% and use it for future iteration.B. A new team member is going to join the team in the next iteration, so the team adjusted their velocity appropriately and selected more work to do in the iterationC. To forecast velocity for first iteration,- 1) the team builds deeper understanding of few stories from the backlog- 2) From the understood stories, they select stories they feel they can get done in one sprint.- 3) The sum the estimates of the selected stories is the team's forecasted velocity.D. One of the team members is taking a couple days off in next iteration, but the team didn't adjust its velocity to reflect that.",
      "definition": "C. To forecast velocity for first iteration,  D. One of the team members is taking a couple days off in next iteration, but the team didn't adjust its velocity to reflect that."
    },
    {
      "term": "Which of the following methods can help you track a release? (select any 2)A. A cumulative flow diagram for a releaseB. A release burn-up chartC. An iteration burn-down chartD. A weekly status report",
      "definition": "A. A cumulative flow diagram for a release  B. A release burn-up chart"
    },
    {
      "term": "What is true about user stories in Agile Software Development? (Select any 3)A. User stories are tokens for conversations.B. To be valid, a story MUST follow the following syntax template: \"As a ____ I want to _______________ so that ____________________ .\"C. Stories can be written at different levels and can be refined and split into smaller stories as you move from vague idea to implemented software.D. All stories have to be the same size.E. User stories are used to plan, design, describe, build, and validate your product.",
      "definition": "A. User stories are tokens for conversations.  C. Stories can be written at different levels and can be refined and split into smaller stories as you move from vague idea to implemented software.  E. User stories are used to plan, design, describe, build, and validate your product."
    },
    {
      "term": "What are some of the benefits of writing acceptance tests for a story? (select 4)A. They help the product owner (who is writing the story) think through the user needs.B. They can potentially help you split stories, if required.C. They help build a common understanding between team members.D. They make sure the story is easy to develop.E. They help you write tests cases for the story.",
      "definition": "A. They help the product owner (who is writing the story) think through the user needs.  B. They can potentially help you split stories, if required.  C. They help build a common understanding between team members.  E. They help you write tests cases for the story."
    },
    {
      "term": "What is wrong with the following story? (Select any 2)\"As a product owner, I want a list of highly-rated restaurants on the brochure.\"A. It doesn't specify the value of the story (the \"why\" is missing).B. The user who benefits from this story is missing (the \"who\" is missing).C. The story is not small.D. The story is not negotiable.",
      "definition": "A. It doesn't specify the value of the story (the \"why\" is missing).  B. The user who benefits from this story is missing (the \"who\" is missing)."
    },
    {
      "term": "What is wrong with following user story? (Select any 2)\"I want the software to be easy to use.\"A. The story is very big.B. The story is not valuable.C. It is not testable.D. No valid user is identified.",
      "definition": "C. It is not testable.  D. No valid user is identified."
    },
    {
      "term": "How is gathering user needs / requirements different on an agile project? (select any 3)A. At any given time, the level of detail may be different for different parts of the software.B. The agile way supports progressive refinement---defining the right level of detail at the right time.C. Agile encourages conversations as a key method for building a shared understanding.D. In agile, we don't waste time on understanding user needs. Instead, we build something, show it to the user, and learn.",
      "definition": "A. At any given time, the level of detail may be different for different parts of the software.  B. The agile way supports progressive refinement---defining the right level of detail at the right time.  C. Agile encourages conversations as a key method for building a shared understanding."
    },
    {
      "term": "What are some of the activities that happen during a User Story Writing Workshop? (Select any 4)A. Everybody silently writes user stories around a themeB. Sometimes, you keep it free-form for people to write stories and later group them by theme.C. The leaders from the organization lay out exactly what needs to be built.D. To generate stories, one of the options is to start from the top down or bottom up.E. User role analysis and defining personas",
      "definition": "A. Everybody silently writes user stories around a theme  B. Sometimes, you keep it free-form for people to write stories and later group them by theme.  D. To generate stories, one of the options is to start from the top down or bottom up.  E. User role analysis and defining personas"
    },
    {
      "term": "Which of the following are true about the Story Mapping technique? (select 3)A. It is a user-centric approach where we map out the system from a user's perspective.B. Only the product owner and users attend the story mapping exercise.C. The horizontal axis (moving from left to right) in a story map represents time.D. The vertical axis (moving from top to bottom) in a story map represents rough priority.E. One story map can only have one user. It is not recommended to have multiple users on same story map.",
      "definition": "A. It is a user-centric approach where we map out the system from a user's perspective.  C. The horizontal axis (moving from left to right) in a story map represents time.  D. The vertical axis (moving from top to bottom) in a story map represents rough priority."
    },
    {
      "term": "Due to an unpredictable market event, the Product Owner (PO) asked the team to complete the next release in 6 weeks. Assuming the backlog in Table 2 is up to date and prioritized from highest to lowest, the Product Owner wants you to estimate what can be done in next 6 weeks. Describe 1) what can be done, 2) what might be done, and 3) what will not be done.The velocity range to be used for the release planning is 15-22.The team works in 2 week iteration.Table 2: Prioritized Product BacklogStory TitleEstimate (in ideal days)Story 15Story 25Story 38Story 43Story 55Story 65Story 7 3Story 85Story 98Story 108Story 113Story 123Story 133Story 145Story 15 8Story 163Story 175Story 185Story 198Story 208 | Most likely: Story 1 to Story 8; Might Be Done: Story 9 to Story 13; Not likely: Rest of the stories | Most likely: Story 1 to Story 9; Might be Done: Story 10; Not likely: Rest of the stories | Most likely: Story 1 to Story 11; Might be Done: Story 12 and 13; Not likely: Rest of the stories",
      "definition": "Most likely: Story 1 to Story 8; Might Be Done: Story 9 to Story 13; Not likely: Rest of the stories"
    },
    {
      "term": "What is true about planning with an agile mindset? (Select any 2)A. Use Adaptive Planning.B. Planning is mostly done by project manager.C. Plan just enough, just in time.D. Plan as little as you can. Planning is considered a non-productive activity.",
      "definition": "A. Use Adaptive Planning.  C. Plan just enough, just in time."
    },
    {
      "term": "What do we mean by Velocity in agile terms?A. It is calculated at the team level and represents the estimated duration of current iteration.B. It is calculated at the team level and represents how much work a team can get done in an iteration.C. It represents actual work done in the first iteration of project.D. It is a velocity of the individual team members, not the team",
      "definition": "B. It is calculated at the team level and represents how much work a team can get done in an iteration."
    },
    {
      "term": "Which of the following are official rituals/meetings/practices in scrum? Select four.A. Sprint Review MeetingB. Sprint Retrospective MeetingC. Mid-Sprint Status Review MeetingD. Daily Scrum MeetingE. Sprint Planning Meeting",
      "definition": "A. Sprint Review Meeting  B. Sprint Retrospective Meeting  D. Daily Scrum Meeting  E. Sprint Planning Meeting"
    },
    {
      "term": "What are the three roles in Scrum?A. Product OwnerB. Scrum MasterC. AnalystD. ArchitectE. The Team",
      "definition": "A. Product Owner  B. Scrum Master  E. The Team"
    },
    {
      "term": "Who prioritizes the work in Scrum?A. Product OwnerB. The TeamC. Team ManagerD. Scrum Master",
      "definition": "A. Product Owner"
    },
    {
      "term": "What artifacts are defined as part of Scrum framework? Select two.A. Product BacklogB. Sprint BacklogC. Iteration Burndown / BurnupD. Product SpecificationE. Test Plan",
      "definition": "A. Product Backlog  B. Sprint Backlog"
    },
    {
      "term": "What artifacts are defined as part of Scrum framework? Select any 3. | Product Backlog | Sprint Backlog | Iteration Burndown / Burnup | Product Specification | Test Plan",
      "definition": "Product Backlog | Sprint Backlog | Iteration Burndown / Burnup"
    },
    {
      "term": "In Scrum, when is the sprint backlog created?A. At the beginning of the projectB. During the sprint planning meetingC. During the backlog refinement meetingD. Whenever needed",
      "definition": "B. During the sprint planning meeting"
    },
    {
      "term": "In Scrum, how is the Product Backlog arranged?A. Into categories, P1, P2, P3, etc.B. Items are randomly arranged.C. Large items at the top, small items at the bottom.D. Most important items at the top, least important items at the bottom.",
      "definition": "D. Most important items at the top, least important items at the bottom."
    },
    {
      "term": "In which artifact is the customer requirements stored?A. In the Product BacklogB. In a databaseC. In a Scrum Product Requirement SpecificationD. Nowhere. The Scrum Product Owner knows them",
      "definition": "A. In the Product Backlog"
    },
    {
      "term": "In which agile artifact are the customer needs captured? | In the Product Backlog | In a database | In a Scrum Product Requirement Specification | Nowhere. The Scrum Product Owner knows them",
      "definition": "In the Product Backlog"
    },
    {
      "term": "What is usually plotted on the x-axis of the Sprint Burndown Chart?A. Days of the sprintB. TasksC. HoursD. Team member names",
      "definition": "A. Days of the sprint"
    },
    {
      "term": "What is a Sprint Burndown Chart?A. A sprint plan which is burned to celebrate successful completion of sprint.B. A chart showing the trend of work remaining across time in a sprint.C. A chart showing the trend of work accomplished across time in a sprint.D. A graph to measure human burnout effect due to fast pace of sprint",
      "definition": "B. A chart showing the trend of work remaining across time in a sprint."
    },
    {
      "term": "Your team is planning out the next sprint. You've chosen to fill the sprint by taking stories in priority order from the product backlog and stopping when you reach the first story that won't fit in the sprint.Based on following details, which stories should the team commit to for a sprint?Table 1: Prioritized story with estimated story points and total estimate in hrs of tasks for that story.\"Story\" - \"Story Points\" - \"Total of Tasks Estimates\"Story 1 - 5 - 16 hrsStory 2 - 8 - 16 hrsStory 3 - 5 - 24 hrsStory 4 - 3 - 16 hrsStory 5 - 13- 32 hrsStory 6 - 8 - 26 hrsStory 7 - 5- 8 hrsStory 8 - 8- 15 hrsStory 9 - 5 - 12 hrsTable 2: Capacity of Team members for given sprint\"Name\" - \"# days available\" - \"Hours / day\" - \"Capacity (hrs) You compute this\"John - 3 - 4-5Matt - 5 - 2-3Sally - 5 - 4-5Ram - 5 - 2-3A. Story 1, Story 2, and Story 3B. Story 1 and Story 2C. Story 1, Story 2, Story 3, and Story 4D. Story 1, Story 2, Story 3, and Story 7",
      "definition": "A. Story 1, Story 2, and Story 3"
    },
    {
      "term": "Your team is planning out the next sprint. You've chosen to fill the sprint by taking stories in priority order from the product backlog and stopping when you reach the first story that won't fit in the sprint. Based on following details, which stories should the team commit to for a sprint?Table 1: Prioritized story with estimated story points and total estimate in hrs of tasks for that story. StoryStory PointsTotal of Tasks EstimatesStory 1516 hrsStory 2816 hrsStory 3524 hrsStory 4316 hrsStory 51332 hrsStory 6826 hrsStory 758 hrsStory 8815 hrsStory 9512 hrsTable 2: Capacity of Team members for given sprintName# days availableHours / dayCapacity (hrs) You compute thisJohn34-5Matt52-3Sally54-5Ram52-3 | Story 1, Story 2, Story 3, and Story 7 | Story 1 and Story 2 | Story 1, Story 2, and Story 3 | Story 1, Story 2, Story 3, and Story 4",
      "definition": "Story 1, Story 2, and Story 3"
    },
    {
      "term": "During sprint execution, when are new tasks added to the sprint?A. When the product owner identifies a new task.B. When the scrum master identifies a new task.C. Never. Sprint tasks are fixed and decided during sprint planning.D. As soon as possible after they are identified, unless they reflect a scope change in the sprint goals.E. When the scrum master approves them.",
      "definition": "D. As soon as possible after they are identified, unless they reflect a scope change in the sprint goals."
    },
    {
      "term": "Who should attend the sprint retrospective?A. All team members.B. The scrum master and some of the team members.C. Everybody in the team, except for the product owner.D. Everybody who is attending the sprint review, to get as much feedback as possible.E. The product owner, team members, and their managers.",
      "definition": "A. All team members."
    },
    {
      "term": "How long should the Daily Standup be?A. At least an hour.B. As long as you need.C. Short fixed duration (most commonly 15 min).D. Change based on how many people are attending.",
      "definition": "C. Short fixed duration (most commonly 15 min)."
    },
    {
      "term": "Which of the following are discussed in a sprint retrospective? Select three.A. What's working?B. What's not working?C. New action items / What can we do better?D. Finding mistakes and achievements of individual team members.",
      "definition": "A. What's working?  B. What's not working?  C. New action items / What can we do better?"
    },
    {
      "term": "Which of the following is true about Scrum?A. In the daily stand-up, everybody talks about what they worked on, what they are planning to work on, and any impediments they have.B. In a Sprint Review, we talk about process and talk about what worked, what didn't work, and how we can improve.C. It is encouraged to make iteration scope changes during the sprint.D. In a Sprint Retrospective, we talk about what we built, demo it, and get customer/client feedback.E. Burn-down and Burn-up charts help the team track the progress of the current sprint.",
      "definition": "A. In the daily stand-up, everybody talks about what they worked on, what they are planning to work on, and any impediments they have.  E. Burn-down and Burn-up charts help the team track the progress of the current sprint."
    },
    {
      "term": "Which of the following is TRUE about Scrum? (Select two)A. Scrum is an adaptive model.B. Scrum has fixed, time-boxed development cycles called sprints.C. The daily stand-up in scrum is mainly for the scrum master to get the status of the project.D. Scrum is the best way to implement the agile mindset. Other Agile methods are not as effective.",
      "definition": "A. Scrum is an adaptive model.  B. Scrum has fixed, time-boxed development cycles called sprints."
    },
    {
      "term": "You are a developer on a scrum team. Your scrum master invited you to attend a sprint planning meeting. Which of following activities would you expect in that meeting?A. The team talks about what went well and what didn't go well in the sprint.B. The developers/testers provide a high-level estimate for stories.C. The product owner (or equivalent) shares the top priority stories for the sprint.D. Either during the meeting or afterwards, developers create tasks to further solidify what work needs to be done and make final a work commitment for the sprint.E. The developers/testers ask questions to understand the stories.F. The team will select the stories to work on for next iteration (sprint).",
      "definition": "B. The developers/testers provide a high-level estimate for stories.  C. The product owner (or equivalent) shares the top priority stories for the sprint.  D. Either during the meeting or afterwards, developers create tasks to further solidify what work needs to be done and make final a work commitment for the sprint.  E. The developers/testers ask questions to understand the stories.  F. The team will select the stories to work on for next iteration (sprint)."
    },
    {
      "term": "You need to calculating a team member's capacity for an iteration. Which of the following activities should be EXCLUDED from the committed capacity of the team member?A. Time spent on defectsB. Paid time off (PTO)C. Organizational MeetingsD. Sprint CeremoniesE. Basic support for the productF. Helping other team members",
      "definition": "B. Paid time off (PTO)  C. Organizational Meetings  D. Sprint Ceremonies"
    },
    {
      "term": "During sprint planning, you are in the process of calculating team members capacity for an iteration. Which of the following activities should be EXCLUDED from the committed capacity of the team member? | Team member taking vacation / days off / Paid time off (PTO) | Organizational Meetings | Sprint Ceremonies | Basic support for the product | Helping other team members",
      "definition": "Team member taking vacation / days off / Paid time off (PTO) | Organizational Meetings | Sprint Ceremonies"
    },
    {
      "term": "What should happen in the sprint review meeting? (select any 3) | A potentially shippable product increment is demonstrated live. | What happened during the Sprint is reported. | Team members reviews three things 1)What went well? 2) What didn't go well and 3) What can be improved? | Feedback is gathered from stakeholders resulting in additional items added to the product backlog. | Presentation slides are shown about hypothetical things.",
      "definition": "A potentially shippable product increment is demonstrated live. | What happened during the Sprint is reported. | Feedback is gathered from stakeholders resulting in additional items added to the product backlog."
    },
    {
      "term": "The CEO asks a team member to do some work outside the goals of the current sprint in progress. What should the team member do?A. Add it to the next sprint.B. Add it to the current sprint while swapping out committed work of equal size.C. Inform the product owner so he can work with the CEO and if it is still necessary to get this work done in current sprint, it should be discussed with in the team.D. Add it to the current sprint.",
      "definition": "C. Inform the product owner so he can work with the CEO and if it is still necessary to get this work done in current sprint, it should be discussed with in the team."
    },
    {
      "term": "When is a sprint complete?A. When all tasks are complete.B. When all committed product backlog items meet their definition of done.C. It depends.D. When the sprint duration ends. For example, if sprints are 2 weeks long, then the sprint is complete at the end of those 2 weeks.",
      "definition": "D. When the sprint duration ends. For example, if sprints are 2 weeks long, then the sprint is complete at the end of those 2 weeks."
    },
    {
      "term": "Which of the following are goals of the daily stand-up meeting?A. Share status information.B. Report progress to the manager.C. Set team direction and synchronize the day's activities.D. Remove every single impediment in this meeting.E. Identify impediments.F. Assign work to people.",
      "definition": "A. Share status information.  C. Set team direction and synchronize the day's activities.  E. Identify impediments."
    },
    {
      "term": "Which of following is true about Sprint Reviews?A. Only team members attend the Sprint Review.B. The Sprint Review is to show stakeholders the documentation and design. The demo should be given to customer before the sprint review.C. Individual team members should be encouraged to demo the work they did.D. The Sprint Review should be done every week even if your sprint duration is 3 weeks or longer.",
      "definition": "C. Individual team members should be encouraged to demo the work they did."
    },
    {
      "term": "Which of the following statements are true about the Sprint Retrospective? (select all that apply)A. It is important to follow up on action items the team decided to work on.B. There is one format you should use to conduct retrospectives: What's working, what's not working, and what can we do better?C. Managers should be required to attend retrospectives so they know what problems team members have.D. Team members should avoid blaming (finger pointing) other team members in the retrospective.",
      "definition": "A. It is important to follow up on action items the team decided to work on.  D. Team members should avoid blaming (finger pointing) other team members in the retrospective."
    },
    {
      "term": "Which of the following is the right sequence when developing software using the XP practice of Test First Programming?A. Write a testMake sure the test failsWrite enough code so the test passesRefactor as necessaryB. Write codeRefactor as necessaryWrite a testMake the test passC. DesignWrite codeWrite a testD. Write codeWrite a testMake the test passRefactor as necessary",
      "definition": "A. Write a test"
    },
    {
      "term": "Which of the following is the meaning of XP practice \"Whole Team\"? | The whole team should always sit together in a room. | The whole team should be energized and passionate about the product they are building. | All the skills necessary to deliver the software product should be present on the team. | The whole team should be working together to meet the team's commitment",
      "definition": "All the skills necessary to deliver the software product should be present on the team."
    },
    {
      "term": "Which XP practice prescribes that \"the code [always be] written by two programmers at one machine\"?A. Buddy ProgrammingB. Twin ProgrammingC. Peer ProgrammingD. Pair Programming",
      "definition": "D. Pair Programming"
    },
    {
      "term": "Which of the following are primary practices prescribed by XP?A. Weekly RetrospectivesB. Daily StandupsC. Continuous IntegrationD. Pair ProgrammingE. Whole Team",
      "definition": "C. Continuous Integration  D. Pair Programming  E. Whole Team"
    },
    {
      "term": "One of the practices of XP is \"Whole Team\". Which of the following statements align with its meaning?A. All the skills necessary to deliver the software product should be present on the team.B. The whole team should be working together to meet the team's commitmentC. The whole team should be energized and passionate about the product they are building.D. The whole team should always sit together in a room.",
      "definition": "A. All the skills necessary to deliver the software product should be present on the team."
    },
    {
      "term": "If an XP team cannot provide an estimate for a story, what should they do to gain a better understanding of the story?A. Create a spike story---a new story under which the team will do some research or other work to gain a better understanding of the original story.B. Provide their best guess based on what they know.C. No action required; keep the story with no estimates.D. Skip that story and exclude that story from the release.",
      "definition": "A. Create a spike story---a new story under which the team will do some research or other work to gain a better understanding of the original story."
    },
    {
      "term": "According to XP's principles, what should you do when a story's acceptance test fails?A. Release the software without fixing; a few bugs are ok.B. Create a bug report so it can be fixed.C. Extend the iteration's duration so the bug(s) can be fixed in the same iteration.D. As a team, update the acceptance test so the test passes.",
      "definition": "B. Create a bug report so it can be fixed."
    },
    {
      "term": "What activities occur as part of XP's \"Weekly Planning\" practice?A. Selecting the next week's work.B. Planning who is going to facilitate meetings for the rest of the weekC. Reviewing the previous week's progress.D. Breaking stories into smaller tasks.",
      "definition": "A. Selecting the next week's work.  C. Reviewing the previous week's progress.  D. Breaking stories into smaller tasks."
    },
    {
      "term": "According to the concept of \"Whole Team\", which of the following statements are true?A. All of the skills the team needs to be successful should be in the team.B. The team members never change. Once a team member is part of the team, that team member always remain part of the team.C. It is not recommended for a team member to be part of multiple teams.D. If the team finds out that they need a particular skill in the team, they can add a person with that skill to the team.",
      "definition": "A. All of the skills the team needs to be successful should be in the team.  C. It is not recommended for a team member to be part of multiple teams.  D. If the team finds out that they need a particular skill in the team, they can add a person with that skill to the team."
    },
    {
      "term": "An XP team is getting feedback more frequently than they can handle. What should they do?A. Ignore the extra feedback.B. Slow down the frequency of feedback.C. Further increase the frequency and quantity of feedback.D. Work extra hours each day to address all of the feedback.",
      "definition": "B. Slow down the frequency of feedback."
    },
    {
      "term": "Which of the following statements are true about the XP value of \"Simplicity\"?A. No matter what you are building, just choose a simple design even if it only partially solves the problem.B. Select the simplest design that could possibly work.C. Generalize your solution so it can work for unanticipated future requests.D. The software design for each component should fit on a single page.",
      "definition": "B. Select the simplest design that could possibly work."
    },
    {
      "term": "Which of the following are 5 Lean principles? (Not the 7 principles of Lean software development)A. Identify ValueB. KaizenC. Seek PerfectionD. Create flowE. Weekly CadenceF. Map the Value StreamG. Establish Pull",
      "definition": "A. Identify Value   C. Seek Perfection   D. Create flow   F. Map the Value Stream   G. Establish Pull"
    },
    {
      "term": "In terms of \"Lean\", what is the best description of Waste?A. Waste is the usage of any resource during the process, which are not recognized by the customer as adding value to the product or service they receive.B. Waste is something you put in the rubbish bin.C. Waste is a part of the Process and is always inevitable.",
      "definition": "A. Waste is the usage of any resource during the process, which are not recognized by the customer as adding value to the product or service they receive."
    },
    {
      "term": "Lean techniques define \"Value\" from the perspective of who?A. Team MembersB. The ManagerC. The CustomerD. All stakeholders",
      "definition": "C. The Customer"
    },
    {
      "term": "In Lean software development, how can amplifying learning occur? (Select all that apply)A. The developers make different solutions, each with the exact same features.B. The developers use short iterations.C. The developers choose technologies that force them to learn new skills.D. The developers write detailed specifications before writing code.",
      "definition": "A. The developers make different solutions, each with the exact same features.  B. The developers use short iterations."
    },
    {
      "term": "How can waste arise in software development? (Select all that apply)A. There are product defects found late in the development.B. Knowledge about the developers' skills is shared among the team.C. Developers work on rarely used product features.D. Required features expected to be developed in a given time period are fully \"done\".",
      "definition": "A. There are product defects found late in the development.  C. Developers work on rarely used product features."
    },
    {
      "term": "In Lean software development, what does the principle of \"defer commitment\" mean?A. Decisions are made to delay the product delivery to a later date.B. Decisions are made after having enough information from considering the alternatives.C. Decisions are made to choose the modern alternative.D. Decisions are made just before a deadline.",
      "definition": "B. Decisions are made after having enough information from considering the alternatives."
    },
    {
      "term": "In Lean software development, what does the principle of \"deliver fast\" mean? (select 2 that apply)A. Working alternatives are rapidly created.B. The software product is delivered rapidly via courier.C. A simpler version of software product (an MVP - Minimum Viable Product) is developed first to reach the market rapidly.D. Iterations are short, so feedback is frequent, and product evolution is rapid.",
      "definition": "C. A simpler version of software product (an MVP - Minimum Viable Product) is developed first to reach the market rapidly.  D. Iterations are short, so feedback is frequent, and product evolution is rapid."
    },
    {
      "term": "Which of the following align with the lean principle of \"build quality in\"? (select 2 that apply) | The developers refactor the source code to be simpler and easier to modify. | Instead of focusing on refactoring every sprint, certain sprints are dedicated to focus on quality. | External inspectors determine whether the software product is high quality. | The developers apply practices to avoid or quickly catch errors while making the software product.",
      "definition": "The developers refactor the source code to be simpler and easier to modify. | The developers apply practices to avoid or quickly catch errors while making the software product."
    },
    {
      "term": "In Lean software development, what does \"optimize the whole\" mean? (Select all the apply)A. Leaders look at the whole picture while the other team members only look at the parts of the system.B. Rather than trying to optimize one part, look at the whole system for optimization opportunities.C. The ability of a system to achieve its purpose depends on how well the parts work together, not just how well they perform individually.D. The whole software product is merely the sum of its individual features.",
      "definition": "B. Rather than trying to optimize one part, look at the whole system for optimization opportunities.  C. The ability of a system to achieve its purpose depends on how well the parts work together, not just how well they perform individually."
    },
    {
      "term": "Which of the following tools can help you find waste in a process?A. Value Stream MappingB. 5 WhysC. KaizenD. Exploring multiple options",
      "definition": "A. Value Stream Mapping"
    },
    {
      "term": "What are some of the tools to amplify learning? (Select all that apply)A. Sustainable developmentB. Daily Builds and Smoke TestsC. IterationD. Set Based Development",
      "definition": "B. Daily Builds and Smoke Tests  C. Iteration  D. Set Based Development"
    },
    {
      "term": "How do you deliver fast (i.e reduce cycle time) without compromising the quality?A. Have people work on multiple things at the same time.B. Finish the work and leave quality for later.C. Minimize the number of items in-process.D. Ask people to work overtime.",
      "definition": "C. Minimize the number of items in-process."
    },
    {
      "term": "\"The Last Responsible Moment\" is a tool for which Lean Software Principle?A. Deliver FastB. See the WholeC. Empower PeopleD. Defer Commitment",
      "definition": "D. Defer Commitment"
    },
    {
      "term": "Lean helps increase productivity by:A. Adding additional resources to help decrease the burden of the workload.B. Increasing inputs to directly increase outputs.C. Reducing the amount of useless activity that our resources (the team members) are currently burdened with.D. Giving staff more work to help create more output.",
      "definition": "C. Reducing the amount of useless activity that our resources (the team members) are currently burdened with."
    },
    {
      "term": "Which practices waste time during software development? (Choose two)A. The working software is shown to the client, who offers constructive feedback.B. Everyone is aware of the progress through an updated Kanban board.C. Weekly meetings that are held whether or not they are needed.D. Delays in receiving work products.",
      "definition": "C. Weekly meetings that are held whether or not they are needed.  D. Delays in receiving work products."
    },
    {
      "term": "Which of these are core properties of Kanban? (Select all that apply)A. Daily stand-upB. Manage FlowC. Visualize the WorkD. RetrospectivesE. Limit work in progress",
      "definition": "B. Manage Flow  C. Visualize the Work  E. Limit work in progress"
    },
    {
      "term": "Which of following is valid on a Kanban Board? Select two.A. The WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done\". The number of items in the \"Doing\" column is 4, and the number of items in the \"Done\" column is 0.B. The WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done\". The number of items in the \"Doing\" column is 3, and the number of items in the \"Done\" column is 2.C. The WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done\". The number of items in the \"Doing\" column is 2, and the number of items in the \"Done\" column is 1.D. The WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done\". The number of items in the \"Doing\" column is 2, and the number of items in the \"Done\" column is 1. One of the items in the previous step is done and the developers want to move that item to Step X.E. The WIP limit for Step X is 5. Step X is divided into \"Doing\" and \"Done\". The number of items in the \"Doing\" column is 3, and the number of items in the \"Done\" column is 1. One of the items in the previous step is done and the developers want to move that item to Step X.",
      "definition": "C. The WIP limit for Step X is 3. Step X is divided into \"Doing\" and \"Done\". The number of items in the \"Doing\" column is 2, and the number of items in the \"Done\" column is 1.   E. The WIP limit for Step X is 5. Step X is divided into \"Doing\" and \"Done\". The number of items in the \"Doing\" column is 3, and the number of items in the \"Done\" column is 1. One of the items in the previous step is done and the developers want to move that item to Step X."
    },
    {
      "term": "A software development team just started using Kanban. They had the following columns on their Kanban board, in order from left to right: Backlog, Analysis, Development, Testing, Deployment. Each column has a WIP limit of 3.There are currently 3 items in testing (3 items being tested). Similarly, there are 3 items in the development column (2 items that are in development and 1 item is done with its development).One of the developers does not have anything to work on, so the manager wants to add one more item to the development column so the developer looking for work can work on it.Which of the following are valid next actions in this situation? Select all that apply.A. The manager should ask the testers to temporarily move an item from the test column to the deployment column so that we can move a different item from development to test. Later, we can move the item back from the deployment column to the testing columnB. The manager should ask the developer waiting for work to help the testers so that they can finish one of the items in their column and move it to the deployment column.C. The team should get together and discuss if they should add another tester to the test team so this bottleneck can be resolved quickly.D. The manager should ask the deployment team if a done item in the testing column can be deployed so there is space to move an item from development to testing.E. It does not make sense for the developer to wait for items to move out of testing. The manager should add one more item to the development column with no other change needed.",
      "definition": "B. The manager should ask the developer waiting for work to help the testers so that they can finish one of the items in their column and move it to the deployment column.  C. The team should get together and discuss if they should add another tester to the test team so this bottleneck can be resolved quickly.  D. The manager should ask the deployment team if a done item in the testing column can be deployed so there is space to move an item from development to testing."
    },
    {
      "term": "The 5 \"Whys\" to be considered during a Root Cause Analysis are...?A. Why, Why, Why, Why and WhyB. Who, Who, Who, Who, and WhoC. Who, What, When, Where and WhyD. Who, Why, Why not, When, What",
      "definition": "A. Why, Why, Why, Why and Why"
    },
    {
      "term": "What is the purpose of the Lean tool 'Kaizen'?A. To create a map of the physical path taken by the product as it passes through the process.B. To analyze the forces supporting or resisting a particular change.C. To ensure that the workstation does not make anything until the next work center requests supply.D. An improvement activity to create more value and remove waste.",
      "definition": "D. An improvement activity to create more value and remove waste."
    },
    {
      "term": "Which of the following can be used to do 5 Whys analysis?A. A fishbone diagramB. A sin diagramC. A node graphD. A grid diagram",
      "definition": "A. A fishbone diagram"
    },
    {
      "term": "In Kanban, a developer pulls the next item to work on from the:A. managers who determine which tasks will be performedB. previous column on the boardC. clients determining the tasksD. product backlog",
      "definition": "B. previous column on the board"
    },
    {
      "term": "You are a developer on a team using a Kanban board to manage flow. You work on Step X within the process and it just so happens that you are looking for more work.The Kanban board is set up as follows:Step X has a WIP limit of 3.Step X is divided into \"Doing\" and \"Done.\"The number of items in the \"Doing\" column is 2.The number of items in the \"Done\" column is 1.Without violating the rules of the Kanban board, what should you do? Select all that apply.A. Ignore the WIP limit of 3. Pick the next item to work on from the previous column.B. Help the group (that picks work from the following column) finish their work so they can pull an item from the \"Done\" column of Step X. That will allow you to pick an item from the previous step.C. Talk to the team about adjusting the WIP limit because increasing the WIP limit will create a better flow of work.D. Push the done item to the next column/step without considering the WIP limit of the next column/step.",
      "definition": "B. Help the group (that picks work from the following column) finish their work so they can pull an item from the \"Done\" column of Step X. That will allow you to pick an item from the previous step.  C. Talk to the team about adjusting the WIP limit because increasing the WIP limit will create a better flow of work."
    },
    {
      "term": "Which of the following statements are true about Value Stream Mapping? Select all that apply.A. It is recommended that you go to the place where work is happening because that will distract the people working and will skew your value stream map.B. Value-added activities are activities that add value from the customer perspective.C. Cycle Time is the total time taken for Value Stream.D. There is no need to identify the non-value-added map as it does not add value for the customer.",
      "definition": "B. Value-added activities are activities that add value from the customer perspective.  C. Cycle Time is the total time taken for Value Stream."
    },
    {
      "term": "What is the formula to calculate the Process Cycle Efficiency?A. Value Added Time / Cycle TimeB. Value Added Time / Non Value Added TimeC. (Value Added Time - Non Value Added Time) / Total Cycle TimeD. Value Added Time - Non Value Added Time",
      "definition": "A. Value Added Time / Cycle Time"
    },
    {
      "term": "What is the main goal of the Build-Measure-Learn Cycle?A. To go through the build-measure-learn cycle as fast as possible.B. To make sure we do quality work through every step of this cycle.C. To go through the build-measure-learn cycle as cheaply as possible.D. To make sure we get lot of work done effectively in this cycle.",
      "definition": "A. To go through the build-measure-learn cycle as fast as possible."
    },
    {
      "term": "What do we mean by Validated Learning?A. Validate what you learned from your product with company leaders.B. Launch a product and then decide what we want to measure to validate.C. Validating the assumptions by conducting an experiment and collecting data.D. Listening to what the customer is saying.",
      "definition": "C. Validating the assumptions by conducting an experiment and collecting data."
    },
    {
      "term": "Which of the following are principles of Lean startup? Select all that apply.A. Innovation AccountingB. Invest as little as possible and build inexpensive productsC. Validated LearningD. Entrepreneurs are everywhere",
      "definition": "A. Innovation Accounting  C. Validated Learning  D. Entrepreneurs are everywhere"
    },
    {
      "term": "Which of the following are true about Lean Startup? Select two.A. It relies on actual data rather than gut feelings to validate assumptions or ideas.B. It is a concept applicable to startup companies only.C. It is the best method to use for all kinds of development.D. It is based on going through the Build-Measure-Learn cycle as fast as you can",
      "definition": "A. It relies on actual data rather than gut feelings to validate assumptions or ideas.  D. It is based on going through the Build-Measure-Learn cycle as fast as you can"
    },
    {
      "term": "Why are traditional management principles ill-suited to the world of startups?A. Because startups can only be built with a \"just do it\" attitude.B. Because startups face chaos and uncertainty.C. Because building a startup is not the same as institution building.",
      "definition": "B. Because startups face chaos and uncertainty."
    },
    {
      "term": "When a startup 'pivots', what is it doing?A. Ignoring its vision.B. Employing a revised strategy in an attempt to achieve its vision.C. Optimizing its product.",
      "definition": "B. Employing a revised strategy in an attempt to achieve its vision."
    },
    {
      "term": "According to Ries, which of the following adjectives describes good startup metrics? Select all that apply.A. ActionableB. AuditableC. AccessibleD. Audience-Focused",
      "definition": "A. Actionable  B. Auditable  C. Accessible"
    },
    {
      "term": "Which of the following are levels of Pirate Metrics? Select all that apply.A. ReferralB. AcquisitionC. RetentionD. RegistrationE. RevenueF. Activation",
      "definition": "A. Referral  B. Acquisition  C. Retention  E. Revenue  F. Activation"
    },
    {
      "term": "Which of the following are true about Pivot or Persevere? Select two.A. Customer segment pivot: The product hypothesis is partially confirmed; it solves the right problem but for a different customer than originally anticipated.B. Pivot means to close the startup company and start a new one.C. Zoom-out pivot: What was previously considered a single feature in a product becomes the whole product.D. Platform pivot: A change from an application to a platform or vice versa.",
      "definition": "A. Customer segment pivot: The product hypothesis is partially confirmed; it solves the right problem but for a different customer than originally anticipated.  D. Platform pivot: A change from an application to a platform or vice versa."
    },
    {
      "term": "How do Vanity metrics prevent/inhibit pivoting?A. Vanity metrics allow entrepreneurs to draw incorrect conclusions. Based on these metrics, they assume that the product is going in the right direction when it really isn't.B. Vanity metrics are the metrics that matter.C. Vanity metrics are designed by leadership so no pivoting is necessary.D. Vanity metrics are user-based collection which is always the right metrics to measure.",
      "definition": "A. Vanity metrics allow entrepreneurs to draw incorrect conclusions. Based on these metrics, they assume that the product is going in the right direction when it really isn't."
    },
    {
      "term": "What are three ways that a past customer can drive sustainable growth?A. As side advertising due to usage of the productB. Word-of-mouth referralC. Repeat purchaseD. By reporting defects in your product",
      "definition": "A. As side advertising due to usage of the product  B. Word-of-mouth referral  C. Repeat purchase"
    },
    {
      "term": "What are the characteristics of \"Early Adopters\"?A. They use the product only if it is reliable and of good quality.B. Early adopters will give you their time and honest feedback.C. They only use your product if it is free.D. Early adopters are actively seeking a solution to the problem your product solves.",
      "definition": "B. Early adopters will give you their time and honest feedback.  D. Early adopters are actively seeking a solution to the problem your product solves."
    },
    {
      "term": "What are leap-of-faith assumptions?A. Assumptions that, if true, would result in a lot of revenue.B. Assumptions that are the riskiest elements of a startup plan.C. Assumptions that the organization made after getting the blessing of the stakeholders.",
      "definition": "B. Assumptions that are the riskiest elements of a startup plan."
    },
    {
      "term": "Which of these attributes are favored by Lean startup? Select two.A. Elaborate upfront planingB. Experimentation and IterationC. Customer feedbackD. Waterfall development",
      "definition": "B. Experimentation and Iteration  C. Customer feedback"
    },
    {
      "term": "Who is an \"Intrapreneur\" ?A. Entrepreneurs that work with other entrepreneurs.B. A manager who promotes innovations within the company.C. The opposite of an entrepreneur: someone who prevents innovation.",
      "definition": "B. A manager who promotes innovations within the company."
    },
    {
      "term": "Which of the following are true about Design Thinking? Select 2.A. It is a technique for designers to design software.B. It recommends that a cross-functional team work together in the design thinking process.C. It is a process for creative problem solving.D. It consists of five steps: requirements, design, development, testing and deployment.",
      "definition": "B. It recommends that a cross-functional team work together in the design thinking process.  C. It is a process for creative problem solving."
    },
    {
      "term": "In design thinking, what are two of the main reasons to empathize with users?A. To prevent team member bias from impacting their understanding of the problem and influencing the solution.B. To discover the real problem to be solved.C. To make sure users know that we are building the solution for them.D. To build a good relationship with users.",
      "definition": "A. To prevent team member bias from impacting their understanding of the problem and influencing the solution.  B. To discover the real problem to be solved."
    },
    {
      "term": "Design thinking results in innovation by integrating which three things?A. Business ViabilityB. Technical FeasibilityC. Practical AbilityD. Human Desirability",
      "definition": "A. Business Viability  B. Technical Feasibility  D. Human Desirability"
    },
    {
      "term": "What are the two dimensions for categorizing assumptions?A. Impact on our solution if it is wrongB. Probability that it will be wrongC. Impact on our solution if it is rightD. Probability that it will be right",
      "definition": "A. Impact on our solution if it is wrong  B. Probability that it will be wrong"
    },
    {
      "term": "What are the two dimensions for categorizing tests?A. Quality of data collected from the testB. Nice to have TestsC. Cost/Effort of conducting a testD. Must have Tests",
      "definition": "A. Quality of data collected from the test  C. Cost/Effort of conducting a test"
    },
    {
      "term": "The logical (intended) dependency is that observer depends on subject.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Up until now, the great state of Foo has held a lottery to help fund education in the state. The corporation tasked with the drawing of these numbers (the non-televised ones) is XYZ Numerical Tasking. You are the technical lead for the system which handles the drawings for the state's lotteries. One of your developers, with a mathematical tilt, comes to you with a proposal: change how the random numbers are generated. He suggests that the generation of random numbers could be better. NASA has released a random number generator which has been proven to be better than the one used by the company. He suggests that you make the change. One of your more senior developers notes that using the new generator will require a change. He suggests that the team connect the existing lotto system, as seen in Figure 1, to the new generator (Figure 2) using the Facade pattern. Figure 1 Figure 2 Facade, which seeks to simplify complex processes for a client by providing a API which hides the complicated calls/work needed, doesn't seem to fit. What pattern does?",
      "definition": "Adapter"
    },
    {
      "term": "Within the Custodial Management System, there are are a variety of items that are being watched at any given time. Certain items can receive notifications that a response is needed immediately (rather than just tracking whether the regular upkeep has been done that week/month/etc.). These items may then need one of several possible actions: rapid cleaning, bodily fluid containment and/or removal, addressing traction/slip-danger, urgent repair, etc. Each of these actions fit the same profile (action) but not necessarily the same steps.Which pattern would fit well as a solution to this systems needs?",
      "definition": "Observer"
    },
    {
      "term": "Early in our proof-of-concept work on the new game we are building, we effectively hard-coded the game to ask the user what action to take next, for both players. In this case, both users are tied into a single account, so that we can play against ourselves while we build out the game.Now, however, we want to add a new player type to the system, EasyDifficultyBot. While the \"player\" actions fit the same high-level format for both humans and our AI, the details of making it happen vary pretty widely.In order to allow for this change, we want to make use of a pattern that will allow this kind of expansion while minimizing changes to the existing code.What pattern would be best here?",
      "definition": "Strategy"
    },
    {
      "term": "Consider the statement \"In the Strategy pattern, the context should hold references to the ConcreteStrategies.\"Under what circumstances would this be true? Select all that apply.A. When the Strategy base class uses a static method to return the correct derived typeB. When the client is tasked with deciding which strategy to useC. When using a Factory object to create StrategiesD. Under no circumstances should the Context hold references to the ConcreteStrategiesE. When the context is tasked with deciding which strategy to use",
      "definition": "E. When the context is tasked with deciding which strategy to use"
    },
    {
      "term": "In the Observer pattern, one difficulty is that the Subject cannot pass an instance of itself to the Observer being updated, due to circular dependencies.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Once a class has been had an Adapter pattern solution applied, it cannot be adapted again.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Factories are no longer useful when you apply the Strategy Pattern to a family of algorithms.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Observer is an implementation of the Dependency Inversion principle.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Strategy Pattern helps maintain the Open/Closed Principle.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Notes: For questions 11-14, the diagram is a standard UML Class Diagram. You can view a larger version by right clicking and selecting \"View image\" (or similar) or by holding on the image and selecting \"Open image in new tab\" (or similar) if you're on mobile. Use up to 3 significant digits (e.g. .5 for 1/2 and .333 for 1/3 are acceptable).For the following class diagram, calculate the Instability value for the Bus class.",
      "definition": "714"
    },
    {
      "term": "For the following class diagram, calculate the Instability value for the Stop class. Use up to 3 significant digits (e.g. .5 for 1/2 and .333 for 1/3 are acceptable).",
      "definition": "333"
    },
    {
      "term": "For the following class diagram, calculate the Instability value for the PassengerUnloader class. Use up to 3 significant digits (e.g. .5 for 1/2 and .333 for 1/3 are acceptable).",
      "definition": "5"
    },
    {
      "term": "For the following class diagram, calculate the Instability value for the Simulator class. Use up to 3 significant digits (e.g. .5 for 1/2 and .333 for 1/3 are acceptable).",
      "definition": "5"
    },
    {
      "term": "While calculating LCOM4, we ignore constructors and destructors. Constructors and destructors frequently set and clear all variables in the class, making all methods connected through these variables, which increases cohesion artificially.LCOM4 = 1 indicates a cohesive class, which is the \"good\" class.LCOM4 >= 2 indicates a problem. The class should be split into so many smaller classes.LCOM4 = 0 happens when there are no methods in a class. This is also a \"bad\" class.Calculate the value of the LCOM4 measurement for the following code:12345678910111213141516171819202122232425262728293031323334353637383940#include\"src/route.h\"Route::Route(std::stringname,Stop**stops,double*distances,intnum_stops,PassengerGenerator*generator){//ConstructorsignoredinLCOM4calculation}voidRoute::Update(){GenerateNewPassengers();for(std::list<Stop*>::iteratorit=stops_.begin();it!=stops_.end();it++){(*it)->Update();}}boolRoute::IsAtEnd()const{returndestination_stop_index_>=num_stops_;}voidRoute::NextStop(){destination_stop_index_++;if(destination_stop_index_<num_stops_){std::list<Stop*>::const_iteratoriter=stops_.begin();std::advance(iter,destination_stop_index_);destination_stop_=*iter;}else{destination_stop_=(*stops_.end());}}Stop*Route::GetDestinationStop()const{returndestination_stop_;}doubleRoute::GetTotalRouteDistance()const{inttotal_distance=0;for(std::list<double>::const_iteratoriter=distances_between_.begin();iter!=distances_between_.end();iter++){total_distance+=*iter;Enter to Rename, Shift+Enter to Preview.monaco-list.list_id_2:focus .monaco-list-row.focused { background-color: #d6ebff; } .monaco-list.list_id_2:focus .monaco-list-row.focused:hover { background-color: #d6ebff; } .monaco-list.list_id_2:focus .monaco-list-row.selected { background-color: #0069d1; } .monaco-list.list_id_2:focus .monaco-list-row.selected:hover { background-color: #0069d1; } .monaco-list.list_id_2:focus .monaco-list-row.selected { color: #ffffff; } .monaco-drag-image, .monaco-list.list_id_2:focus .monaco-list-row.selected.focused { background-color: #0074e8; } .monaco-drag-image, .monaco-list.list_id_2:focus .monaco-list-row.selected.focused { color: #ffffff; } .monaco-list.list_id_2 .monaco-list-row.focused { background-color: #d6ebff; } .monaco-list.list_id_2 .monaco-list-row.focused:hover { background-color: #d6ebff; } .monaco-list.list_id_2 .monaco-list-row.selected { background-color: #e4e6f1; } .monaco-list.list_id_2 .monaco-list-row.selected:hover { background-color: #e4e6f1; } .monaco-list.list_id_2:not(.drop-target) .monaco-list-row:hover:not(.selected):not(.focused) { background-color: #f0f0f0; } .monaco-list.list_id_2.drop-target, .monaco-list.list_id_2 .monaco-list-rows.drop-target, .monaco-list.list_id_2 .monaco-list-row.drop-target { background-color: #d6ebff !important; color: inherit !important; } .monaco-list-type-filter { background-color: #efc1ad } .monaco-list-type-filter { border: 1px solid rgba(0, 0, 0, 0); } .monaco-list-type-filter.no-matches { border: 1px solid #be1100; } .monaco-list-type-filter { box-shadow: 1px 1px 1px #a8a8a8; }Information: Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing Control+M.",
      "definition": "2"
    },
    {
      "term": "Cyclomatic complexity is calculated by the formula:M = E − N + 2P,where E = the number of edges of the graph.N = the number of nodes of the graph.P = the number of connected componentsOpens in a new tab. Calculate the cyclomatic complexity for the following control flow graph: | ",
      "definition": "4"
    },
    {
      "term": "Cyclomatic complexity is calculated by the formula:M = E − N + 2P,whereE = the number of edges of the graph.N = the number of nodes of the graph.P = the number of connected components.Calculate the cyclomatic complexity for the following control flow graph:(Red - 3 White - 3 White - Blue) (Red &amp; Blue are connected)",
      "definition": "4"
    },
    {
      "term": "Cyclomatic complexity is calculated by the formula:M = E − N + 2P,whereE = the number of edges of the graph.N = the number of nodes of the graph.P = the number of connected components.Calculate the cyclomatic complexity for the following control flow graph:(Red - 2 White - 1 White - 2 White - Blue) (Red &amp; Blue are connected)",
      "definition": "4"
    },
    {
      "term": "Which of the following are style errors for the code on Line 2?",
      "definition": "J. order of access restrictions  O. indentation"
    },
    {
      "term": "Which of the following are style errors for the code on Line 3?",
      "definition": "C. variable name should be lowercase  F. variable should have trailing underscore  I. Spacing between elements  M. variable name should be separated by underscore"
    },
    {
      "term": "Which of the following are style errors for the code on Line 4?",
      "definition": "E. variable should have trailing underscore  G. variable name should be lowercase"
    },
    {
      "term": "Which of the following are style errors for the code on Line 5?",
      "definition": "C. indentation  J. order of access restrictions"
    },
    {
      "term": "Which of the following are style errors for the code on Line 6?",
      "definition": "L. Spacing between elements"
    },
    {
      "term": "Which of the following are style errors for the code on Line 7?",
      "definition": "O. method names should be CamelCase"
    },
    {
      "term": "Using a debugger can find all defects in code.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "What is created to allow a compiler to temporarily stop processing code that is being executed to allow for the developer to see current state?A. Debugging breakB. DebuggingC. PauseD. StoppointE. Breakpoint",
      "definition": "E. Breakpoint"
    },
    {
      "term": "Commits should happen only at the end of a daily coding session.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Only one line of code should change per commit.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Commit messages are only helpful to you at the time you make them.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Branching aids developers seeking to work on the same code simultaneously.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Project materials are stored in a remote repository through the WebHook functionality.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Compilers perform static analysis.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Static analysis can only be performed while code is being executed.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "The goal of test selection is to find the maximum number of tests that can be successfully run.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Randomly testing is the poorest form of testing.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "The developer of the code is the best person to test that code.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Manually created tests can use randomly selected inputs to maximize defect finding.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Code coverage includes statement coverage, ensuring all code statements are executed at least once by at least one test case and all tests pass.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Requirements testing is difficult because the tests can't be created until the code is written, which is quite far into the development process.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Program testing helps find defects, but testing cannot prove there are no bugs.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "A test case is a set of inputs written to try and \"break the code\", i.e. find a defect.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Test obligations come from Structural Analysis, that is, from the code itself.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Tests which meet the code coverage criteria can still be poor tests.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "New processes/reports are able to be added to the Jenkins Pipeline through plug-ins.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Continuous Integration alerts to submitting developer of build or test failure, but cannot remove the code committed.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Continuous Integration is a subset of the capabilities in a Continuous Delivery pipeline.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Pushing code to production without the need for developer action is one of the primary benefits of Continuous Delivery.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "The difference between Continuous Delivery and Continuous Deployment is whether the deployment of code to production is manual or automated, respectively.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Canary is a system of alerts to developers based on build, test, release and/or deployment. The alerts are similar to \"tweets\" as on Twitter, hence the similarity of the names.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Since the goal is for every test to pass, tests should only include inputs which will result in successful operation/behavior when executed on correct code.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "The developer should first run the tests before adding anything new, as in to ensure that all tests passed before adding any new tests or code.A. TrueB. False",
      "definition": "A. True"
    },
    {
      "term": "Continuous Delivery is an update to the Blue-Green Deployment paradigm.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Statement coverage is the strongest form of code coverage, which is why it is required for many FAA and FDA regulated software projects.A. TrueB. False",
      "definition": "B. False"
    },
    {
      "term": "Calculate the velocity range a team should use to select work for next iteration based on their past velocities (see chart below). The team uses the last 5 iterations to estimate their velocity. Use format \"from-to\" to specify the answer (e.g., 0-100). No spaces before/after the dash. Table 1: The velocity of previous iterationsIterationStory points completed114218323417515621722820 | ",
      "definition": "15-22"
    },
    {
      "term": "A team was doing release planning and they decided that the next release will include all stories from Story 1 to Story 11 (see table 2 below). The velocity range to be used for the release planning is 15-22. The team works in a 2 week iteration. It costs about $50,000 per iteration to fund the entire team.Calculate the estimated duration for next release. Additionally, how much will this release cost?Table 2: Prioritized Product BacklogStory TitleEstimate (in ideal days)Story 15Story 25Story 38Story 43Story 55Story 65Story 73Story 85Story 98Story 108Story 113Story 123Story 133Story 145Story 158Story 163Story 175Story 185Story 198Story 208 | Duration: 6-8 weeks, Cost: 150K to 200K | Duration: 3-4 weeks, Cost: 150K to 200K | Duration: 10-14 weeks, Cost: 500K to 700K | Duration: 6-8 weeks, Cost: 300K to 400K",
      "definition": "Duration: 6-8 weeks, Cost: 150K to 200K"
    }
  ]
}
